<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AgileFrame.Orm.PersistenceLayer</name>
    </assembly>
    <members>
        <member name="M:AgileFrame.Orm.TemplateEngine.BuildByTag.ParseForSwitch标签(System.String@,AgileFrame.Common.DataBaseField)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.TemplateEngine.BuildByTag.IfNotAvailable(System.String@)">
            <summary>
            如果仅包含 换行符与空格符
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.TemplateEngine.BuildByTag.GetDescriptionAttribute(AgileFrame.Common.DataBaseField)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.HtmlCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem">
            <summary>
            重要且常用：实体类内的属性，包含了（表名、列名、类型）三元素
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.CompareTo(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.CompareTo(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.Equals(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.Equals(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.GetHashCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.op_Equality(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.op_Inequality(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.ClearLanguageService">
            <summary>
            多语言使用
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.#ctor(System.String,System.String,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.#ctor(System.String,System.String,System.String,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="longName"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.ToDataParameterString">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.ParseAttributeName(System.String,System.String@,System.String@)">
            <summary>
            解析 AttributeName
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.ParseAttributeName(System.String,System.String@,System.String@,System.String@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.GetNetTypeStr">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.HandlerZhName">
            <summary>
            在调试期被载入的 持久层执行数据库操作触发的事情，显示了持久层对应的完整Sql语句
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.ZhName">
            <summary>
            列中文名。如果框架进行了多语言xml配置，则为多语言名
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.FieldCtrlName">
            <summary>
            智能取得控件及参数名
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.FieldAnotherName">
            <summary>
            sql name 数据库查询时使用，智能取得别名；由外部赋值...
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.DataLen">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.Scale">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.Precision">
            <summary>
            时间精度，请写明 精度的达表示。如果是 日期，则为 yyyy-MM-dd HH:mm:ss.fff ,如果是整数，写明位数 10 ..
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.AttributeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.TypeNameString">
            <summary>
            "string"，"DateTime"
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.FieldName">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.LongName">
            <summary>
            如果是分表，将重新考虑名称策略。
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.AttributeItem.IsAutoIncrease">
            <summary>
            是否自增
            </summary>
        </member>
        <member name="M:AgileFrame.Development.DevInterface.GetTableList">
            <summary>
            获取所有表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Development.DevInterface.GetFieldList">
            <summary>
            获取特定表的字段名与中文名
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Development.DevInterface.GetFieldEnumList">
            <summary>
            获取特定表的字段名与枚举变量值
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.JsonServiceBase">
            <summary>
            Json服务
            </summary>
        </member>
        <member name="F:AgileFrame.Core.JsonServiceBase.Length">
            <summary>
            长度不能大于20哦
            </summary>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceBase.FromJsonUrlDetail(System.String)">
            <summary>
            获得 键值对 Dictionary(key,value)
            </summary>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceBase.FromJsonUrl``1(System.String)">
            <summary>
            js转换为对象 0|ROLE_TYPE`1| 或者 1|ROLE_TYPE`1|
            为url写的缩略型json串 js转换为对象 0|ROLE_TYPE`1| 或者 1|ROLE_TYPE`1|
            </summary>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceBase.ToJsonUrl``1(``0,System.Int32)">
            <summary>
            为url写的缩略型json串
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="mytable"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceBase.ToJsonUrl``1(``0)">
            <summary>
            为url写的缩略型json串
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="mytable"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceBase.ToJson(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            手工建立json对象字符串
            </summary>
        </member>
        <member name="T:AgileFrame.Core.JsonServiceCommon">
            <summary>
            Json服务
            </summary>
        </member>
        <member name="F:AgileFrame.Core.JsonServiceCommon.Length">
            <summary>
            长度不能大于20哦
            </summary>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceCommon.FromJson1``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceCommon.FromJsonDetail(System.String)">
            <summary>
            获得 键值对 Dictionary(key,value)
            </summary>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.JsonServiceCommon.ToJson(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            手工建立json对象字符串
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.BeanState">
            <summary>
            List of possible state for an entity.
            一个实体对象new完之后，它就是一个Transient状态。而一个处于Transient状态的对象随时都会被垃圾回收器回收掉。
            对象执行了save()或update()之后，这个对象就会变为Persistent状态
            当Persistent状态的对象再被执行evict()或close()或clear()之后，它就会变为Detached状态
            而Detached状态的对象也会随时被垃圾回收器回收掉
            
            当Persistent状态的对象被执行了delete()时，其状态则会转为Transient状态。
            当Detached状态都对象被执行了update()时，其状态则会转为Persistent状态。此时它就又被session所管理来。
            
            1.Transient状态的对象是我们刚刚new出来的，尚未被引用，且数据库中不存在与之对应的记录。
            2.Persistent状态的对象则是由session来管理的，且数据库中存在与之对应的记录。
            3.Detached状态的对象是已经被session抛弃的对象（因为已经执行了evict/close/clear），且数据库中存在与之对应的记录。
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Persistent">
            <summary>
            2.Persistent状态的对象则是由session来管理的，且数据库中存在与之对应的记录。
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Transient">
            <summary>
            1.Transient状态的对象是我们刚刚new出来的，尚未被引用，且数据库中不存在与之对应的记录。
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Detached">
            <summary>
            3.Detached状态的对象是已经被session抛弃的对象（因为已经执行了evict/close/clear），且数据库中存在与之对应的记录。
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Unchanged">
            <summary>
            Entity is unchanged
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Added">
            <summary>
            Entity is new
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Changed">
            <summary>
            Entity has been modified
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.BeanState.Deleted">
            <summary>
            Entity has been deleted
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Collections.MyList">
            <summary>
            通过反射实现 实体类属性 的次序读取
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.ITableCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableCache.GetCacheForPropertyInfo(AgileFrame.Orm.PersistenceLayer.Model.ITable,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <param name="AttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableCache.GetCacheForPropertyInfo``1(``0,System.String)">
            <summary>
            
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="table"></param>
            <param name="AttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableCache.GetCacheForPropertyInfo``1(``0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="table"></param>
            <param name="AttributeName"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Keywords">
            <summary>
            对保留字进行处理
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Keywords.IsNotAllowedTbname(System.String)">
            <summary>
            if (tbname.ToLower() == "frame_sequence" || tbname.ToLower() == "frame_admin")
            </summary>
            <param name="tbname"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.mydefault">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.mydefault.value``1(``0)">
            <summary>
            获得缺省值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.mydefault.defaultvalue">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.mydefault.value(System.Type)">
            <summary>
            获得缺省值
            </summary>
            <param name="testType"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache">
            <summary>
            缓存结果集，减少数据库访问：采用设计模式之--生命周期内 保存tag 
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Add(System.Int32,AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            
            </summary>
            <param name="hashCode"></param>
            <param name="value"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Add``1(System.Object,``0)">
            <summary>
            
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="result"></param>
            <param name="value1"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Add``1(System.Int32,``0)">
            <summary>
            
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="hashCode"></param>
            <param name="value1"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="hashCode"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Get(System.Object)">
            <summary>
            
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Add(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView},AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>
            
            </summary>
            <param name="list"></param>
            <param name="value1"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Add(System.Int32,AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>
            
            </summary>
            <param name="hashCode"></param>
            <param name="value"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Get_IView(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView})">
            <summary>
            
            </summary>
            <param name="valueListList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Get_IView(System.Collections.Generic.List{System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITable}})">
            <summary>
            
            </summary>
            <param name="valueListList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.TableViewCache.Get_IView(System.Int32)">
            <summary>
            
            </summary>
            <param name="hashCode"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model_Base.DataCloner">
            <summary>
            用DynamicMethod实现的全功能的Clone类：
            运用共享技术有效的支持大量细粒度的对象。
            User NewObject = DataCloner.GenericClone...(OldObject);
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.ExtAttr_DBNull">
            <summary>
            扩展属性的值 是否 是数据库空值，此和 null 有区别，所以做此标记
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.ExtAttr_IsInit">
            <summary>
            扩展属性的值 是否被初始化 用在valObj 取值对象赋值时
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.ExtAttr_ValueDic">
            <summary>
            保存扩展属性的值 //wcp 优化此数据结构 考虑用 DataBaseValueCollection 与 DataBaseValue 替代
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.relationAttr_initialized">
            <summary>
            关系属性是否被初始化
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.ExtAttrTableDic">
            <summary>
            关系外键-没用到
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.ExtAttr_importable_fields">
            <summary>
            导入导出字段
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.IsNotNull">
            <summary>
            判断对象属性是否赋值
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.orderbySql_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.whereSql_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.IsNull">
            <summary>
            判断对象属性是否赋值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.IsFull">
            <summary>
            是否全部属性有效
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.tableName">
            <summary>
            实体名，自动分表请使用 _Name
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_LongName">
            <summary>
            表名(中文名)
            </summary>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.HasExtAttr">
            <summary>
            是否存在扩展的属性，自定义的属性；甚至实体类就是自定义的。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.AddRelation(AgileFrame.Orm.PersistenceLayer.Model.Relation,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem})">
            <summary>
            加载关联表字段的数据 到列表中
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Get(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
             取值对象的方法 -- 关联键获取--比如 用户表的角色ID，要获取：角色名称；
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Join(AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITable,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            取值对象的方法 -- 设置关系与属性--比如 用户表的角色ID，要获取：角色名称；
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Like(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            条件对象操作Like
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Like">
            <summary>
            所有条件对象改成 Like 模糊查询方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.UILong">
            <summary>
            UI界面的显示所需高度判断，用于自动判断页面的所需高度。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.ToUrlEscapeString">
            <summary>
            转换为UrlEscape字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.ToJavaScript(System.String)">
            <summary>
            转换为web脚本对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.ToJson">
            <summary>
            转换为Json字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.ToJson(System.Int32)">
            <summary>
            转换为Json字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.ToJsonUrl(System.Int32)">
            <summary>
            转换为Json字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.WriteSql(System.String,System.String)">
            <summary>
            第一个参数：取值对象操作直接输入取值脚本
            第二个参数：条件对象操作直接输入条件脚本
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Select(System.String)">
            <summary>
            取值对象操作直接输入取值脚本
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(System.Boolean,System.String,System.Object[])">
            <summary>
            条件对象操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(System.Boolean,System.String,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            条件对象操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(System.String,System.Object[])">
            <summary>
            条件对象操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(System.String,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            条件对象操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.Between)">
            <summary>
            条件对象操作 属性的Between操作
            </summary>
            <param name="keyField">属性</param>
            <param name="between">Between对象，自动兼容多数据类型与Oracle等多数据源</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(System.String)">
            <summary>
            条件对象操作 方法 Customers.Where("City like '%杭州%' And Orders.Count &gt;=9"). 前面不能包含and
            </summary>
            <param name="conditionSql">条件脚本</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            建议使用 In(...)方法 传递数据的格式为 1,2,3,4  或者
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where_OR(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object[])">
            <summary>
            条件对象操作 Or或操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Where_OR(System.String)">
            <summary>
            条件对象操作 Or或操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.In(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32[])">
            <summary>
            条件对象操作 In 在枚举变量内的操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.In(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String[])">
            <summary>
            条件对象操作 In 在枚举变量内的操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.In(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            传递数据的格式为 1,2,3,4  或者
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.OrderBy(System.String)">
            <summary>
            取值对象与条件对象都可以操作OrderBy
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.OrderBy(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            取值对象 与条件对象 都可以操作OrderBy
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.OrderBy(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.Order)">
            <summary>
            取值对象 与条件对象 都可以操作OrderBy
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Top(System.Int32)">
            <summary>
            取值对象操作Top
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_distinct">
            <summary>
            是否重复
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.whereStr">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITable.IsLoadRelation">
            <summary>
            是否载入所有表关联项
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Union(AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            外键关联表字段，比如 User表内有RoleID，需要增加外键字段，RoleName，
            user.Union(new Relation(User.AttributeItem.RoleID, Role.AttributeItem.RoleID, Role.Attribute.RoleName);
            </summary>
            <param name="otherAttr_FK">外键表</param>
            <param name="fkRelation">外键关联</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Union(AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            外键关联表字段，比如 User表内有RoleID，需要增加外键字段，RoleName，
            user.Union(new Relation(User.AttributeItem.RoleID, Role.AttributeItem.RoleID, Role.Attribute.RoleName, Role.Attribute.RoleType);
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_SqlCopyText">
            <summary>
            获取有效Sql参数
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_GetAvailableAttributeItem">
            <summary>
            获取有效属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取有效属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_GetPropertyInfo">
            <summary>
            获得反射属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_FromIDataReader(System.Data.IDataReader)">
            <summary>
            IDataReader与实体对象的转变
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_FromIDataReader(System.Data.IDataReader,System.Collections.Generic.Dictionary{System.String,System.Int32}@)">
            <summary>
            IDataReader与实体对象的转变
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_FromIDataReaderForNew2(System.Data.IDataReader)">
            <summary>
            IDataReader与实体对象的转变
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_FromIDataReaderForNew2(System.Data.IDataReader,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            IDataReader与实体对象的转变
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.LoadAllAttributes(System.Boolean)">
            <summary>
            所有属性设置为有效/无效
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_Equals(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            判断实体是否相同
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_GetOptionValueSchema">
            <summary>
            获取多选项模式对象（多选项属性为true的对象）
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_SetOptionValue(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            通过已有多选项模式对象格式化当前对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.GetValue(System.String,System.String)">
            <summary>
            获得实体的制定属性值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.TryGetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object@)">
            <summary>
            获得属性值的高效方法
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            设置特定属性的值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.SetValue(System.String,System.Object)">
            <summary>
            设置特定属性的值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_SetKeyNotIdentity(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            获得实体的制定属性有效性(true/false)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>
            设置特定属性的有效性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_GetAttributes">
            <summary>
            获取有效属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_GetAttributesInSequence">
            <summary>
            获取有效属性，按数据源次序
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            设置特定属性的有效性为模式对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Clone">
            <summary>
            克隆
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITable.Clone``1(``0)">
            <summary>
            克隆实体
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITable.af_keyCode">
            <summary>
            提供给外部使用的自定义标识串，可用于分类属性
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITable.AttributeCount">
            <summary>
            获得所有有效属性的数目
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITable.Item(System.String)">
            <summary>
            索引器
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITable.Item(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            索引器
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITable.Distinct">
            <summary>
            是否非重复
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.IDBClass">
            <summary>
            多数据库访问
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.ConditionType">
            <summary>
            条件类型
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.DbBalanceType">
            <summary>
            分布式系统数据结构，数据模型负载的类型；MySpace验证了该负载均衡模型可承受的2千7百万用户的负载能力
            因为数据库内的数据是频繁变化的，为了数据的一致性以及锁资源的分配协调等，所以像应用服务器那样只有分流是不够的，各个节点需要频繁的交互。这也是数据库集群软件难做的原因，当然也是卖的贵的原因了。
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.DbBalanceType.SelfLazy">
            <summary>
            方法内部是事务提交的
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.DbBalanceType.Lazy">
            <summary>
            多个方法延迟到最后一次性提交
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.DbBalanceType.Real_Time">
            <summary>
            嵌套的事务：方法各自可以提交事务，又包含在一个事务内
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.DbBalanceType.None">
            <summary>
            非事务
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Order">
            <summary>
            进行between操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.CompareTo(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.CompareTo(AgileFrame.Orm.PersistenceLayer.Model.OrderByItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.Equals(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.Equals(AgileFrame.Orm.PersistenceLayer.Model.OrderByItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.GetHashCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.op_Equality(AgileFrame.Orm.PersistenceLayer.Model.OrderByItem,AgileFrame.Orm.PersistenceLayer.Model.OrderByItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.op_Inequality(AgileFrame.Orm.PersistenceLayer.Model.OrderByItem,AgileFrame.Orm.PersistenceLayer.Model.OrderByItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.GetSql">
            <summary>
            获得脚本 " city desc," --关键
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.GetSql(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.OrderByItem})">
            <summary>
            完整的orderby 脚本，包含了 " Order By "，同时去除了末尾,符号之后的字符串
            </summary>
            <param name="orderbylist"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.OrderByItem.#ctor(System.String,System.String)">
            <summary>
            直接解析入 Order _order, AttributeItem _attr | TERMINAL_ADDR asc,MPED_INDEX asc
            </summary>
            <param name="orderbyListStr"></param>
            <param name="tbname"></param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Between">
            <summary>
            进行between操作，如果 其中一边的值传入null，则为 大于 或者小于操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Between.#ctor(System.String)">
            <summary>
            输入参数不能包含 分隔符 |，包含 |，请使用 \| 替代
            </summary>
            <param name="BetweenFormat"></param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.DbTypeHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.DbTypeHelper.GetSqlDbType(System.Object)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.DbTypeHelper.GetSqlDbType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement">
            <summary>
            模块配置有关
            </summary>
            <summary>
            实体类的基类
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ToString">
            <summary>
            表名(有效属性数|关联外键属性数)
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetHtmlList(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            获取list页的数据源  
            支持主模块的链接
            支持枚举量
            支持时间格式
            </summary>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetHtmlEdit(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            获取list页的数据源
            </summary>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetBlock_AttributeItem">
            <summary>
            按照次序获取属性数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Get(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
             取值对象的方法 -- 关联键获取--比如 用户表的角色ID，要获取：角色名称；
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetList(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            取值对象的方法 -- 关联键获取--比如 角色的所有用户，要获取：用户名称；
            </summary>
            <param name="m_relationAttr1"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.AddRelation(AgileFrame.Orm.PersistenceLayer.Model.Relation,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem})">
            <summary>
            加载外部关联表字段，需要字段内已经定义了关系Relation  |待实现
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Factory(System.String)">
            <summary>
            Factory("[Frame_View]([ViewCode],[ViewName],[])")
            或者 Factory("[Frame_View],[ViewCode],[ViewName],[]")
            </summary>
            <param name="tableAndColumn"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Factory(AgileFrame.Common.DataBaseTable)">
            <summary>
            用DataBase进来
            </summary>
            <param name="tb1"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetTimeStamp(System.String,System.Boolean)">
            <summary>
            设置是否需要支持并发冲突
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.MaxCondition(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            表示需要符合条件的行是：某表中该属性为最大值的行。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.MinCondition(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            表示需要符合条件的行是：某表中该属性为最小值的行。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.AddCondition(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            表示条件为 该属性符合该条件对象 where userid=(select top 1 userid from ProjectUser where ProjectUser.puid = 1)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Serialize(System.String)">
            <summary>
            将对象序列化到文件
              
            </summary>
            <param name="path">需要保存的路径</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Serialize(System.String,AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            将对象序列化
              
            </summary>
            <param name="path">需要保存的路径</param>
            <param name="objCrazyCoder">ITable对象</param>
            <returns>是否序列化成功</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.DeSerialize(System.String)">
            <summary>
            将对象反序列化 
              
            </summary>
            <param name="path">源对象的路径</param>
            <returns>返回新的ITable对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ToXml">
            <summary>
            返回存储在实体类中的Xml表现形式
              
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.FromXml(System.String)">
            <summary>
            从Xml字符串中反序列化获得实体类
            </summary>
            <param name="xml">Xml</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.FromXml(System.String,System.Text.Encoding)">
            <summary>
            从Xml字符串中反序列化获得实体类
             
            </summary>
            <param name="xml">Xml</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ToUrlEscapeString">
            <summary>
            将对象转化为Url连接字符串
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ToJson">
            <summary>
            json转换
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ToJson(System.Int32)">
            <summary>
            length是一种长度限制：在json转换时，防止过长的字段值被转换
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.FromJsonUrl(System.String)">
            <summary>
            json转换回对象
            </summary>
            <returns></returns>        
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ToJavaScript(System.String)">
            <summary>
            将对象转化为javascript对象
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_Unchanged">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Unchanged_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_IsLoadAllAttributes">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_relationSql">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.relationSql_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_valueSql">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_relations">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.relations_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_whereSql">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.whereSql_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_whereSqlParameters">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.whereSqlParameters_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_topSql">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.topSql_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_orderbyItem">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.orderbySql_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_isAutoConditon">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_conditonStr">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_isAutoContent">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_ContentStr">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_isAutoInsert">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_InsertStr">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_isAutoUpdate">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.m_UpdateStr">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.IsUserDefinedAttribute">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Union(AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            仅查询关联表时有效，外键关联表字段，比如 User表内有RoleID，需要增加外键字段，RoleName，
            user.Union(new Relation(User.AttributeItem.RoleID, Role.AttributeItem.RoleID, Role.Attribute.RoleName);
            </summary>
            <param name="otherAttr_FK">外键表</param>
            <param name="fkRelation">外键关联</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Union(AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            仅查询关联表时有效，外键关联表字段，比如 User表内有RoleID，需要增加外键字段，RoleName，
            user.Union(new Relation(User.AttributeItem.RoleID, Role.AttributeItem.RoleID, Role.Attribute.RoleName, Role.Attribute.RoleType);
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_UpdateText(System.String)">
            <summary>
            格式：, [列名]=@表名_列名  oracle支持 "列名"=@表名_列名
            </summary>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.DicAttrValueDic">
            <summary>
            枚举量
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_ConditionText(System.String)">
            <summary>
            格式： AND [列名]=@列名  Where 1=1 and userid=2
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_ContentText(System.Boolean)">
            <summary>
            格式：,[列名]
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_InsertText(System.String)">
            <summary>
            格式：,@列名
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_UpdateText">
            <summary>
            格式：, [列名]=@列名
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_ConditionText">
            <summary>
            格式： And [列名]=@列名
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_InsertText">
            <summary>
            格式：,@列名
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Select(System.String)">
            <summary>
            直接写Sql的方法，将放在 取值语句 的最前面。
            比如 统计方法等。使用方法：Customers.Select("max(Orders.Count)").Select("min(Orders.Count)").Select("avg(Orders.Count)");Select("max(Cast(seqNum as int))");
            使用方法：Customers.Select("max(Orders.Count),min(Orders.Count),avg(Orders.Count)");
            </summary>        
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.WriteSql(System.String,System.String)">
            <summary>
            直接写Sql的方法，将放在 取值语句与条件语句 的最前面
            第一个参数：取值对象操作直接输入取值脚本
            第二个参数：条件对象操作直接输入条件脚本
            使用方法：Customers.WriteSql("distinct max(Orders.Count),min(Orders.Count),avg(Orders.Count)","Orders.OrderName='赵立广'");        /// 
            </summary>
            <param name="valueSql"></param>
            <param name="conditionSql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Like(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            条件对象操作Like //zlg????like不能接受参数
            </summary>
            <param name="keyField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Like">
            <summary>
            所有实体内的条件对象改成 Like_OR 模糊或 查询方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.UILong">
            <summary>
            UI界面的显示所需高度判断，用于自动判断页面的所需高度。
            //窄的一个40 //宽的一个80
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(System.Boolean,System.String,System.Object[])">
            <summary>
            第一个参数：Is_override =true 的时候，将覆写 前面的 Where方法写的条件；
            使用方法：Customers.Where("City like '%{0}%' And Orders.Count >= {1}", "杭州", 10). 前面不能包含and
            Customers.Where("{0} like '%杭州%', Customes.Attribute.City);
            <para>使用方法：Customers.Where("City like '%{0}%' And Orders.Count >= {1}", "London", 10). 前面不能包含and</para>
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(System.String,System.Object[])">
            <summary>
            第一个参数：Is_override =true 的时候，将覆写 前面的 Where方法写的条件. 默认为false.
            <para>使用方法：Customers.Where("City like '%{0}%' And Orders.Count >= {1}", "London", 10). 前面不能包含and</para>
            </summary>
            <param name="Format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.Between)">
            <summary>
            您仅能传入两个参数，作为 Between And 的参数
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            传递数据的格式为 1,2,3,4 或者 赵立广,邵根均,施易展  。系统将自动判断是否是数字类型，还是字符类型。
            因为如果是字符串，需要系统转换为：'赵立广','邵根均','施易展'
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.In(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32[])">
            <summary>
            条件对象操作  In操作
            </summary>
            <param name="keyField"></param>
            <param name="idArray"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.In(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String[])">
            <summary>
            条件对象操作  In操作
            </summary>
            <param name="keyField"></param>
            <param name="nameArray"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.In(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            传递数据的格式为 1,2,3,4 或者 赵立广,邵根均,施易展  。系统将自动判断是否是数字类型，还是字符类型。
            因为如果是字符串，需要系统转换为：'赵立广','邵根均','施易展'
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(System.String)">
            <summary>
            使用方法：Customers.Where("City like '%杭州%' And Orders.Count >=9")；默认不覆盖之前的Where条件，如果覆盖，请使用Where(true, sql);
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(System.Boolean,System.String)">
            <summary>
            Is_override 为 true ，表示覆盖此前输入的where条件。为false，表示仅仅增加新的where条件
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where(System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="Is_override"></param>
            <param name="conditionSql"></param>
            <param name="AndOrOR"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where_OR(System.String)">
            <summary>
            使用方法：Customers.Where("City like '%杭州%' And City.UserSum >=9"). 前面不能包含and
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where_OR(System.Boolean,System.String)">
            <summary>
            使用方法：Customers.Where("City like '%杭州%' And Orders.Count >=9"). 前面不能包含and
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where_OR(System.Boolean,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object[])">
            <summary>
            中间将使用or操作，使用方法：Customers.Where(User.AttributeItem.UserName, new string[]{"张三","李四"}).
            </summary>
            <param name="Is_override"></param>
            <param name="keyField"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where_OR(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            conditionSqls 为 "city like '%abc%'"," name='杭州'"
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Where_OR(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object[])">
            <summary>
            使用方法：Customers.Where(User.AttributeItem.UserName, new string[]{"张三","李四"}).
            </summary>
            <param name="keyField"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.OrderBy(System.String)">
            <summary>
            不推荐使用，
            取值对象与条件对象都可以操作OrderBy，
            使用方法：OrderBy("CompanyName asc, CompanyID desc"); 请不要写 Order By 字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.OrderBy(System.Boolean,System.String)">
            <summary>
            (是否覆盖，orderby字符串)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.RemoveOrderBy">
            <summary>
            移除OrderBy条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.RemoveWhere">
            <summary>
            移除Where条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.OrderBy(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.Order)">
            <summary>
            取值对象 与条件对象 都可以操作OrderBy，
            使用方法：OrderBy(DOC_SUBDEPT.Attribute.CompanyName)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.OrderBy(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            取值对象 与条件对象 都可以操作OrderBy，
            默认为 Asc
            </summary>
            <param name="attributeItem"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Top(System.Int32)">
            <summary>
            取值对象操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_PageBy(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.Order)">
            <summary>
            设置分页属性，取值对象比条件对象优先。
            </summary>
            <param name="pageItem"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.CheckColumn(System.Data.IDataReader,System.String,System.Collections.Generic.Dictionary{System.String,System.Int32}@)">
            <summary>
            
            </summary>
            <param name="dr"></param>
            <param name="columnName"></param>
            <param name="drPostions"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.CheckColumn(System.Data.IDataReader,System.String)">
            <summary>
            
            </summary>
            <param name="dr"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_FromIDataReader(System.Data.IDataReader)">
            <summary>
            从SqlDataProvider中读取数据
            </summary>
            <param name="dr"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_FromIDataReader(System.Data.IDataReader,System.Collections.Generic.Dictionary{System.String,System.Int32}@)">
            <summary>
            从SqlDataProvider中读取数据 启用高性能缓存
            </summary>
            <param name="dr"></param>
            <param name="drPostions"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_FromIDataReaderForNew2(System.Data.IDataReader,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[],AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            已知赋值对象的方法//zlg
            </summary>
            <param name="dr"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetConditon(System.String)">
            <summary>
            设置条件语句，设置改语句之后，将替代自动生成条件语句
            </summary>
            <param name="conditionSqlStr">条件对象，例如where id=@id And Name=@name</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetContent(System.String)">
            <summary>
            设置内容语句，设置改语句之后，将替代自动生成内容语句
            </summary>
            <param name="contentSqlStr">内容对象，例如 count(*) </param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetInsert(System.String)">
            <summary>
            设置内容语句，设置改语句之后，将替代自动生成插入语句
            </summary>
            <param name="insertSqlStr">内容对象，例如 ", @列名 </param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetUpdate(System.String)">
            <summary>
            设置内容语句，设置改语句之后，将替代自动更新插入语句
            </summary>
            <param name="updateSqlStr">内容对象，[列名]=@列名 </param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Join(AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITable,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            取值对象的方法 -- 设置关系与属性--比如 用户表的角色ID，要获取：角色名称；
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.TableName">
            <summary>
            111
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.ClearLanguageService">
            <summary>
            多语言使用
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetTableZhName(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Clone">
            <summary>
            克隆
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Clone(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            克隆实体集合
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.AllInitialized(System.Boolean)">
            <summary>
            
            </summary>
            <param name="IsLoadAllAttributes"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.LoadAllAttributes(System.Boolean)">
            <summary>
            111
            </summary>
            <param name="IsLoadAllAttributes"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.IsNullValue">
            <summary>
            判断取值对象是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.IsNullCondition">
            <summary>
            判断条件对象是否为空，以及是否赋于条件。没有赋值返回true
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.IsFull">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_Contains(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            本对象是否符合传入的条件对象
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_Equals(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            
            </summary>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetOptionValueSchema">
            <summary>
            111获得具备选项与枚举的对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_SetOptionValue(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetModule(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement}@,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation}@)">
            <summary>
            按照主表名，得到 模块级查询的 其他实体类，和关系类
            </summary>
            <param name="valuelist"></param>
            <param name="relationlist"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetModule(System.String,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement}@,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation}@)">
            <summary>
            按照模块名，得到 模块级查询的 其他实体类，和关系类
            </summary>
            <param name="moduleName"></param>
            <param name="valuelist"></param>
            <param name="relationlist"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.TryGetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object@)">
            <summary>
            获取与指定的键相关联的值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            如果进来这边表示有自定义的列
            </summary>
            <param name="AttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.IsDBNull(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetDBNull(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>
            111
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetInitialized(System.String,System.Boolean)">
            <summary>
            111
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>
            111
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            通过模式对象 设置属性的初始化布尔值，将模板对象的初始化布尔值拷贝到目标对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetAvailableDataParameter(System.String)">
            <summary>
            获取AttributeItem //zlg
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetPropertyInfo">
            <summary>
            获取反射属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetAvailableAttributeItem">
            <summary>
            获取所有有效的属性 和 属性对应的值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetAvailableDataBaseField">
            <summary>
            获取所有有效的属性 和 属性对应的值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_SetKeyNotIdentity(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetAttributes">
            <summary>
            仅获取所有有效的属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_GetAttributesInSequence">
            <summary>
            仅获取所有有效的属性，并且排序
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Item(System.String)">
            <summary>
            索引器
            </summary>
            <param name="PropertyName"></param>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Item(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            索引器
            </summary>
            <param name="AttributeName"></param>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Frame_TimeStamp_Attr">
            <summary>
            时间戳，用来解决并发冲突，数据冲突....
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.Frame_TimeStamp">
            <summary>
            是否需要解决并发冲突，Varchar(20+)
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.DicAttrValues">
            <summary>
            记录中枚举值，至多每个字段保留8个不同的值
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_Relations">
            <summary>
            延迟加载项
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_ValueSQL">
            <summary>
            使用情况：为特殊统计查询等内容，直接录入SQL语句更加方便的情况，使用方法：ValueSQL="max(ROLE_ID),min(ROLE_ID),count(ROLE_ID),sum(ROLE_ID)"
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_WhereSQL">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_TopText">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_PageByAttributeItem">
            <summary>
            分页属性
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_PageByOrder">
            <summary>
            分页次序
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_OrderByText">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_OrderByItem">
            <summary>
            设置排序属性
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement._TableName">
            <summary>
            实体名
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement._ZhName">
            <summary>
            表语义名，表中文名。如果框架进行了多语言xml配置，则为多语言名
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.ITableImplement.af_AttributeItemList">
            <summary>
            返回所有属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplementHelper.Factory``1(System.String)">
            <summary>
            支持 TABLE，TB_FIELD 的获取对象表名和列名
            </summary>
            <param name="tb_Name"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.ITableImplementHelper.Factory(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.String)">
            <summary>
            支持 TABLE，TB_FIELD 的获取对象表名和列名
            </summary>
            <param name="tb_Name"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView">
            <summary>
            用于多表结果集保存的数据类，IView 内部包含多个 ITableImplement
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="itableName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.RemoveAll">
            <summary>
            移除所有的内部实体对象 效果类似 IView view = new IView()；
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Clear">
            <summary>
            Clear其实并不释放实体对象，只是重新初始化实体对象。使用 IView view = new IView(); 重新初始化视图模型类
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.#ctor(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.#ctor(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Add(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            基础的增加模式，属于替换型增加模式
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Add(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Add(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Clone(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            基础的增加模式，属于替换型增加模式
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Clone(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Clone(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.GetITable(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.GetITable(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.GetITables(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView})">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.GetAttrAndDefaultValue(System.Collections.Generic.List{System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}@)">
            <summary>
            获取view内的所有属性与缺省空值
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.ListName">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.ListTable">
            <summary>
            用于绑定的方法
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Item(System.Int32)">
            <summary>
            用于绑定的方法，不区分大小写
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Item(System.String)">
            <summary>
            用于绑定的方法，不区分大小写
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.IView.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relations.Add(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            增加关系内条件
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relations.op_BitwiseOr(AgileFrame.Orm.PersistenceLayer.Model.Relations,AgileFrame.Orm.PersistenceLayer.Model.Relations)">
            <summary>
            表示 或逻辑关系 ||
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relations.op_BitwiseAnd(AgileFrame.Orm.PersistenceLayer.Model.Relations,AgileFrame.Orm.PersistenceLayer.Model.Relations)">
            <summary>
            表示 与逻辑关系 
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relation_Descriptor.op_BitwiseOr(AgileFrame.Orm.PersistenceLayer.Model.Relation_Descriptor,AgileFrame.Orm.PersistenceLayer.Model.Relation_Descriptor)">
            <summary>
            表示 或逻辑关系 ||
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:AgileFrame.Orm.PersistenceLayer.Model.Relation_Descriptor.op_BitwiseAnd(AgileFrame.Orm.PersistenceLayer.Model.Relation_Descriptor,AgileFrame.Orm.PersistenceLayer.Model.Relation_Descriptor)”忽略有格式错误的 XML 注释 -->
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.SubQuery">
            <summary>
            目前不支持跨表的子查询的逻辑表达
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.SubQuery.#ctor(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.SubQueryType)">
            <summary>
            
            </summary>
            <param name="oneField"></param>
            <param name="otherField"></param>
            <param name="subQueryType"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.SubQuery.#ctor(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.SubQueryType,AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            
            </summary>
            <param name="oneField"></param>
            <param name="otherField"></param>
            <param name="subQueryType"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.SubQuery.IsEqual(AgileFrame.Orm.PersistenceLayer.Model.SubQuery)">
            <summary>
            
            </summary>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.SubQueryType">
            <summary>
            父查询与子查询的关系
            <para>存在、不存在、大于、小于</para>
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.ValueType">
            <summary>
            特殊条件类型，体现为统计方法
            <para>最大值、平均值、统计值、总计值、第一个值</para>
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Relation">
            <summary>
            关系对象
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Relation.RelationAttrList">
            <summary>
            关联表操作时的属性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relation.#ctor(System.String)">
            <summary>
            导入序列化字符串为对象
            </summary>
            <param name="fullRelationStr"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relation.#ctor(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            关联对象(主键表属性、外键表属性), 如果对象内有条件 则增加到 Conditions里,AddCondition(ITable condition)
            </summary>
            <param name="AttributeItem_PK"></param>
            <param name="AttributeItem_FK"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Relation.#ctor(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.RelationType)">
            <summary>
            需遵从主键、外键关系的次序进行输入。
            </summary>
            <param name="AttributeItem_PK">主键属性</param>
            <param name="AttributeItem_FK">外键属性</param>
            <param name="relationType">关系，通常为 RelationType.RightJoin 或者 RelationType.InnerJoin</param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.RelationText">
            <summary>
            与Relation不同，就是在 TableName_PK.TableName_FK; 与 [TableName_PK].[TableName_FK];
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.RelationCache">
            <summary>
            关系缓存，将关系对象加入该缓存后；在使用时，便可不指明关系语句 由系统自动识别缓存内的关系
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.RelationCache.sys_RelationDictionary">
            <summary>
            key = user_roles  key = tableA_tableB, value = List::Relation
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.RelationCache.Clear">
            <summary>
            成员清空
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.RelationCache.SearchByTable(System.Collections.Generic.List{System.String})">
            <summary>
            关系查找需要优化 允许重复。
            </summary>
            <param name="tableNames"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.RelationCache.SearchByTable(AgileFrame.Orm.PersistenceLayer.Model.ITable)">
            <summary>
            取得单表作为主键的所有周边关系
            </summary>
            <param name="oneTable"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime">
            <summary>
            持久层运行时
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.InitTableInfo(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.initializeds">
            <summary>
            特定表是否已针对次定语言 已经初始化 //包括 枚举 自定义多选项 外键
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.countlist_User">
            <summary>
            自定义多选项
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.countlist_FK">
            <summary>
            外键关联多选项
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Factory(System.String)">
            <summary>
            输入数据源连接关键字 connectStr 可以是 web.config/app.config 的节点，可以直接是连接字符串；两者的区别以 是否包含 "="符号 来判断
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.UpdateDataBase(AgileFrame.Common.DataBase,System.String@)">
            <summary>
            升级到目标数据库
            </summary>
            <param name="m_DataBase_old"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.InitModule(AgileFrame.Common.DataBase)">
            <summary>
            结构化数据，保存在master里，而不是用户数据库中。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Refresh">
            <summary>
            清理缓存
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.DeleteEc">
            <summary>
            清空配置库
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.LoadEc">
            <summary>
            载入配置库
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetKeyID(System.String)">
            <summary>
            IDField
            </summary>
            <param name="_TableName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.AddTable2Ec">
            <summary>
            将所有表加入到配置库
            </summary>
            <param name="AFMasterConnstr"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.InitCtrlType(AgileFrame.Common.DataBaseField)">
            <summary>
            重要 cs bs 都适用。
            </summary>
            <param name="f1"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.IsInTbColumnCannotConditions(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            if (sqlType == "text" || sqlType == "image" || sqlType == "ntext") 不能作为条件
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.ViewRelation">
            <summary>
            视图关系
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbColumnDescription">
            <summary>
            表、列、列描述
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbColumnZhName">
            <summary>
            表、列、列中文值 //超级保存zlg
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbColumnDisplayAttr">
            <summary>
            表、列、自定义用户显示字段
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbTableZhName">
            <summary>
            表、表中文值
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbColumnOptionValues">
            <summary>
            表 列 数值 中文值
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_Identity">
            <summary>
            表-自增长键值
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_PK">
            <summary>
            表-主键
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_IsNotNull">
            <summary>
            表-是否非空
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_Index_isUnique">
            <summary>
            表-索引-唯一性,true为聚集的，false为普通索引
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_FK">
            <summary>
            外键表-外键列名
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_FK_PKTable">
            <summary>
            表-外键列名对应的主键表
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Tb_PK_FKTable">
            <summary>
            表-主键列名对应的外键表
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbHaveFK">
            <summary>
            关联表的外键表
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.TbHavePK">
            <summary>
            关联表的主键表
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.KeyName_FK">
            <summary>
            关联表的外键
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.KeyName_PK">
            <summary>
            关联表的主键
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.RelationTypes">
            <summary>
            类型，一对一关系与一对多关系
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetIndexStr(System.String,System.String)">
            <summary>
            用在model的属性描述
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.IsExistFK(System.String)">
            <summary>
            是否存在外键
            </summary>
            <param name="tbname"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetFKStr(System.String,System.String)">
            <summary>
            用在model的属性描述
            第一个是本列，第二个是主键列，第三个是外键列
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetPKTableFromFK(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation}@,System.String)">
            <summary>
            显式
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetPKTableFromFK_Implict(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation}@,System.String)">
            <summary>
            获取对应的主键表：隐式
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetFKTableFromPK(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation}@,System.String)">
            <summary>
            系统内置的，显式的
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetFKTableFromPK_User(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation}@,System.String)">
            <summary>
            用户配置的
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetKeys(System.String,System.String)">
            <summary>
            获取主键与外键对应的键值列
            </summary>
            <param name="pk_tbName"></param>
            <param name="fk_tbName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetTb_Identity(System.String)">
            <summary>
            返回所有自增键
            </summary>
            <param name="tbname"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetTablePK(System.String)">
            <summary>
            返回所有主键
            </summary>
            <param name="tbname"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.InitAttributeItemInfo(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            关键哦！初始化字段多语言
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetOptionText(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,AgileFrame.Core.DescriptionType)">
            <summary>
            没用到?
            </summary>
            <param name="AttributeName"></param>
            <param name="valuelist"></param>
            <param name="valuelistZh"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetOptionText(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,AgileFrame.Core.DescriptionType)">
            <summary>
            关键! 
            DescriptionType.Enum 枚举多选项
            DescriptionType.CombDisplay 用户自定义显示源
            获取所有设计人员在数据库中固定写好的数值，需要xml进行多语言配置
            </summary>
            <param name="tbname"></param>
            <param name="AttributeNamelist"></param>
            <param name="valuelistlist"></param>
            <param name="valuelistlistZh"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetOptionText_FK(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            关键! 获取所有关系、外键的可选项   关联主键的值
            </summary>
            <param name="oldTbName"></param>
            <param name="AttributeNamelist"></param>
            <param name="valuelistlist"></param>
            <param name="valuelistlistZh"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.SetColumnZhNameByAttribute(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetColumnZhNameByAttribute(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            关键哦！取得中文列名的多语言值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.IsExistOptionValue(System.String,AgileFrame.Core.DescriptionType)">
            <summary>
            
            </summary>
            <param name="tbname"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.IsExistZhName(System.String,System.String)">
            <summary>
            用到
            </summary>
            <param name="tbname"></param>
            <param name="colname"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.InitTableDescription(AgileFrame.Common.DataBase)">
            <summary>
            获取表描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetFieldEnumList">
            <summary>
            获取特定表的字段名与枚举变量值
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.InitColumnDescription(AgileFrame.Common.DataBase)">
            <summary>
            获取列描述，以及类型输入
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Set(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}}}}@,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            存在增加、删除操作；删除返回-1，增加返回1，已经存在返回0；
            </summary>
            <param name="tmpTbColumnOptionValues"></param>
            <param name="tbname"></param>
            <param name="colname"></param>
            <param name="columnValues"></param>
            <param name="columnZhValues"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.Set(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}}@,System.String,System.String,System.String)">
            <summary>
            columnValue = columnDescription = sqlType
            columnValue = "" 的时候，为删除操作。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.GetAllDataSet">
            <summary>
            取得框架已开放的数据结构列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RunTime.AddRelation(System.String,System.String,System.String,System.String,AgileFrame.Orm.PersistenceLayer.Model.RelationType@)">
            <summary>
            zlg！！增加
            主明细关系：用户表、角色id，角色表，角色id，左关联
            一对一关系：
            层次结构关系：部门表，部门id，部门表，部门父id；一对一关联
            </summary>
            <param name="fTableName"></param>
            <param name="pTableName"></param>
            <param name="fFieldName"></param>
            <param name="pFieldName"></param>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.SqlMapService">
            <summary>
            AppDomain.CurrentDomain.BaseDirectory
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.SqlMapService.m_OrderByWatchDic">
            <summary>
            数据库优化相关
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.SqlMapService.IsInSave">
            <summary>
            解决文件写入同步冲突
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.SqlMapService.IsEnabled">
            <summary>
            sql 脚本的 xml服务
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.XmlService.FileDic">
            <summary>
            确定文件是否被使用了。为true，表示被使用，不能写入，需要等待；为false，表示没有被使用。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.SaveToFileWithAgent``1(System.String,``0)">
            <summary>
            智能保存，如果文件被使用，则通过异步等待操作，实现文件延迟操作。
            </summary>
            <typeparam name="ClassType"></typeparam>
            <param name="filename"></param>
            <param name="classA"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.SaveToFile``1(System.String,``0)">
            <summary>
            xml操作 保存数据对象到xml
            </summary>
            <typeparam name="ClassType"></typeparam>
            <param name="filename"></param>
            <param name="classA"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.ReadFromFile``1(System.String)">
            <summary>
            xml操作 读取xml返回数据对象
            </summary>
            <typeparam name="ClassType"></typeparam>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.StringToList(System.String)">
            <summary>
            xml操作，将 组合泛型 转换为 string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.ListToString(System.Collections.Generic.List{System.Collections.Generic.List{AgileFrame.Common.DataBaseField}})">
            <summary>
            xml操作，将string 转换为组合泛型
            </summary>
            <param name="listlist"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.StringToList_U(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.ListToString(System.Collections.Generic.List{System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Robot.Model.User_Table}})">
            <summary>
            
            </summary>
            <param name="listlist"></param>
            <returns></returns> 
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.XmlService.FormalString(System.String)">
            <summary>
            ASP.NET中XML非法字符的替换
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Robot.Model.IUserXml.XmlName">
            <summary>
            xml名
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Robot.Model.IUserXml.SourceField">
            <summary>
            源字段
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Robot.Model.IUserXml.XmlPath">
            <summary>
            属性名
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Robot.Model.UserTable">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_Table">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera.AllInitWithThread">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera.AllInit">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera.DoAllInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera.SaveXml(System.String)">
            <summary>
            
            </summary>
            <param name="configSourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera.CopyToPath(System.String)">
            <summary>
            输入目录为 文件夹
            </summary>
            <param name="configSourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera.SaveXml">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera`1">
            <summary>
            Table 指 列 固定的目录结构为 AgileFrameUserDefined/...xml
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera`1.SaveXml(System.String)">
            <summary>
            输入的只能是路径，而不是文件路径。因为文件名固定哦。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera`1.SaveXml(System.String,System.Xml.XmlDocument@)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="xmlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera`1.LoadXml(System.Xml.XmlDocument@)">
            <summary>
            重点哦
            </summary>
            <param name="xmlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera`1.CopyToPath(System.String)">
            <summary>
            保存至目标 path 
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Robot.Model.User_TableOpera`1.LoadXml">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.TemplateConfig_User.userXmlPath">
            <summary>
            用户自定义配置
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.TemplateConfig_User.AgileFrameUser_Field">
            <summary>
            下面这些是属性节点哦
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper">
            <summary>
            查看内部数据用OptionValue与OptionText
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetBlocks(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            获取布局
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.isVisible(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            字段是否可见
            </summary>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.isVisible(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            表是否可见
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.Factory(System.String)">
            <summary>
            输入数据源连接关键字 connectStr 可以是 web.config/app.config 的节点，可以直接是连接字符串；两者的区别以 是否包含 "="符号 来判断
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.OptionValue">
            <summary>
            保存的值数组，Sex:0/1
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.OptionText">
            <summary>
            保存的释义数组，Sex:男女
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.IsEnumTranslate">
            <summary>
            是否设置自动转换数字为枚举信息
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.#ctor(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            
            </summary>
            <param name="ib"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetLanguageName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            得到属性的多语言字串
            </summary>
            <param name="AttributeItem"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.Parse(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetSearchName(System.String,System.String@,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem@)">
            <summary>
            得到表中通过AF工具设定的快速查询的 键与中文值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.ClearLanguageService">
            <summary>
            多语言使用
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetOptionValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            获取所有值类型 比如 0,1 (男女)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetOptionAll(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            获取所有Text类型 比如 男女 (0,1)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.IsExistOption(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            是否存在属性多选值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetRemarks(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            得到表格的备注信息
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetOptionText(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            按值来取，按0取男，按1取女 ；与 ListItem[] GetListItem( 相关。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetOptionText(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            按值来取，按0取男，按1取女
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetOptionValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            按含义来取值，按男取0，按女取1
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetComboxData(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            
            </summary>
            <param name="BindAttributeName"></param>
            <param name="textlist2"></param>
            <param name="valuelist2"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BaseFormHelper.GetComboxData(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem},System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            得到 关联外键、枚举键 的 list值
            </summary>
            <param name="BindAttributeName"></param>
            <param name="DisplayAttributeNames"></param>
            <param name="textlist2"></param>
            <param name="valuelist2"></param>
            <returns>是否</returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.Frame_ListItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.Frame_ListItem.#ctor(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="text"></param>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.Frame_ListItem.Value">
            <summary>
            实际的取值
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.BLL.Base.Frame_ListItem.Text">
            <summary>
            显示的属性
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.ComboxType">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.ComboxType.UserKeyTemp">
            <summary>
            用户临时定义关联键，定义在程序中
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.ComboxType.UserKey">
            <summary>
            用户配置定义关联键，在xml中保存
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.ComboxType.ForeignKey">
            <summary>
            外键
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.ComboxType.UserEnum">
            <summary>
            用户配置中定义的
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.ComboxType.Other">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTableInsertPool`1.Close">
            <summary>
            退出存储线程，关闭数据存储服务 //zlg blj
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1">
            <summary>
            业务层操作数据源类，可被缓存操作。如果你需要缓存，您便可以这样操作。
            </summary>
            <typeparam name="MyTable"></typeparam>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1">
            <summary>
            数据库的摘要说明 不可以多于 65535个字符 (SQL Server) Oracle-SQL长度限制 9i的文档写的最大64K 
            SqlCommand 执行 insert 的sql语句最长不能超过多少 Access是2000吧
            注意读取的时候，需要先赋值
            写入的时候，需要先赋值条件，检查是否有default(type)类型，如果有，则重新赋值。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Factory(AgileFrame.Orm.PersistenceLayer.DBUtility.Transaction)">
            <summary>
            此方法不对外公开
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Factory(System.String,System.Boolean)">
            <summary>
            输入数据源连接关键字 connectStr 可以是 web.config/app.config 的节点，可以直接是连接字符串；两者的区别以 是否包含 "="符号 来判断
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Factory(System.String)">
            <summary>
            输入数据源连接关键字 connectStr 可以是 web.config/app.config 的节点，可以直接是连接字符串；两者的区别以 是否包含 "="符号 来判断
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Factory(System.Boolean)">
            <summary>
            记录本次操作是否是事务型操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Factory(System.Int32)">
            <summary>
            为方便使用，0表示conn，1表示 conn1，2表示conn2，3表示conn3
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.ExecSQL(System.String,System.Data.CommandType)">
            <summary>
            直接执行Sql语言，如果是存储过程 可采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SetVersion(System.String)">
            <summary>
            MemCacheSerivce设置缓存版本号
            </summary>
            <param name="_TableName"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.qDataRow(System.String)">
            <summary>
            查询数据返回一个行DataRow
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.qDataRow(System.String,System.Data.CommandType)">
            <summary>
            查询数据返回一个行DataRow
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.qDataSet(System.String)">
            <summary>
            查询数据返回一个记录集DataSet
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.qDataSet(System.String,System.Data.CommandType)">
            <summary>
            查询数据返回一个记录集DataSet
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.qDataTable(System.String)">
            <summary>
            查询数据返回一个记录集表格DataTable
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.qDataTable(System.String,System.Data.CommandType)">
            <summary>
            查询数据返回一个记录集表格DataTable
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetOneValue(System.String,System.Data.CommandType)">
            <summary>
            查询数据返回单个值，返回object
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertQuick2``1(System.Collections.Generic.List{``0})">
            <summary>
            大批量插入数据，采用txt快速导入 与 逐个导入两种模式混合
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.RegisterSqlLogger">
            <summary>
            注册一个SqlLogger，这里定义的为全局Sql日志，记录内容参考 此空间下的 SqlLogger 类，包含 查询与非查询操作 两大类
            两类都包含以下内容：
            时间戳，运行sql脚本，操作表，运行Sql耗时，运行访问层操作耗时
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.UnregisterSqlLogger">
            <summary>
            注销一个SqlLogger
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.RegisterSqlMirrorCache(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            为某个特定的 MyTable 表 注册一个SqlMirrorCache 内存镜像
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.UnregisterSqlMirrorCache(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            注销一个SqlMirrorCache
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.RegisterSqlQueryCache">
            <summary>
            开启SqlQueryCache，通过自动判断最常用的50个操作，50个操作里面可容纳10个参数区。默认结果集超过200条的大结果记录不进行缓存。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.UnregisterSqlQueryCache">
            <summary>
            注销一个SqlQueryCache
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.QueryForTable(AgileFrame.Orm.PersistenceLayer.Model.MultiQuery)">
            <summary>
            多表关联查询，可包含子查询。获取DataTable_MyTable
            </summary>
            <param name="mq">查询对象</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectStrSQL(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.DataParameter}@,AgileFrame.Orm.PersistenceLayer.Model.MultiQuery)">
            <summary>
            返回msg，检测是否方法使用错误。
            </summary>
            <param name="values"></param>
            <param name="conditionList"></param>
            <param name="fullSqlStr"></param>
            <param name="DataParameters"></param>
            <param name="mq"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Execute(System.String,`0)">
            <summary>
            运行根据sql语句，传入sql语句，与条件值对象
            </summary>
            <param name="fullSqlStr">sql语句,格式中的参数名必须和数据列名一样，如ID=@ID</param>
            <param name="condition">sql语句中相应的参数</param>
            <returns>返回操作的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Exists(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据条件判断是否记录是否存在，传入条件对象
            </summary>
            <param name="condition">sql语句中相应的参数</param>
            <returns>返回是否存在</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Exists(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            判断是否存在关联记录，条件（主键表）是否存在外键同时符合主键表条件
            </summary>
            <param name="condition"></param>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetIdentityValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            得到自增值，varchar类型的自定义增长字段
            </summary>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetIdentityValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32)">
            <summary>
            得到自增值，varchar类型的自定义增长字段
            </summary>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <param name="startValue">起步的自增值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetIdentityValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String,System.String)">
            <summary>
            KeyField是varchar类型的自定义增长字段
            </summary>
            <param name="KeyField">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetMaxValue_Frame(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            获取某个表中的自定义自增字段的自增1的值，该实现目前实现的支持数据库类型有 sql2005与2000.
            注意，这里的返回值如果是 int.MinValue ，是存在异常；其他则是正常。
            </summary>
            <param name="KeyField">KeyField是varchar类型的自定义增长字段</param>
            <returns></returns>GetIdentityValue(AttributeItem KeyField, int startValue)
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetMaxValue_Real(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            KeyField是varchar类型的自定义增长字段
            </summary>
            <param name="KeyField">KeyField是varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Handle_Frame_SequenceError(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            KeyField是varchar类型的自定义增长字段
            </summary>
            <param name="KeyFields"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetKeyStr(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            获得插入或更新的条件值
            </summary>
            <param name="table"></param>
            <param name="primaryKeyAttributeItemParams">可以决定一条记录唯一性的一个或多个字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.getAutoId">
            <summary>
            得到int自动增长的字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SaveOrUpdateQuick(System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            保存或者更新数据，请输入主键。限制其无法进行批量更新，以及无非主键值的更新对象。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SaveOrUpdate(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            保存或者更新数据，请输入主键。限制其无法进行批量更新，以及无非主键值的更新对象。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SaveOrUpdate(`0,`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            保存，注意请建立逆序的聚cu索引
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetDataParameters(System.String,`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            为更新数据的时候，用到获取条件
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Insert(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            插入操作
            </summary>
            <param name="value">插入实体对象</param>
            <param name="KeyFields">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Insert(`0)">
            <summary>
            将table数据对象插入到数据库，table不能为空，自动id会自动被排除。返回ExecuteNonQuery的返回值，返回-2 table=null.
            </summary>
            <param name="value">要插入的数据</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Insert(`0,System.Int32,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            将table数据对象插入到数据库，table不能为空 返回ExecuteNonQuery的返回值，返回-2 table=null.
            </summary>
            <param name="value">要插入的数据</param>
            <param name="KeyFields">需要手工自增长的主键</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertForRealSQL(System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            同步数据库数据用。插入sql的生成。KeyField是varchar类型的自定义增长字段
            </summary>
            <param name="valuelist"></param>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertForSQL(`0,System.Boolean,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <param name="KeyFields">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertForSQL(`0,System.Boolean,System.String,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <param name="KeyFields">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertReturnID(`0)">
            <summary>
            将table数据对象插入到数据库，并返回自动增长的数据的ID
            </summary>
            <param name="value">要插入的数据</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertReturnID(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            将table数据对象插入到数据库，并返回刚插入的手工增长的数据库标识值。
            注意：此自增长字段为框架增长的，非标识值
            </summary>
            <param name="value">要插入的数据</param>
            <param name="KeyField">varchar类型的自定义增长字段，最终返回该值</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DoInsert(System.String,`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <param name="KeyFields">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DoInsert(System.String,System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.DataParameter[],AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            通过 fullSqlStr与 value参数将对象插入到数据库
            </summary>
            <param name="fullSqlStr"></param>
            <param name="values"></param>
            <param name="KeyFields">varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Insert(System.Collections.Generic.List{`0})">
            <summary>
            批量将table数据对象插入到数据库，table不能为空
            </summary>
            <param name="valueList">要插入的数据</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Insert(System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            批量将table数据对象插入到数据库，table不能为空 返回ExecuteNonQuery的返回值
            </summary>
            <param name="valueList">要插入的数据</param>
            <param name="KeyField">自增长的列</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(System.String)">
            <summary>
            此接口不可备份删除记录，根据sql语句从数据库删除数据
            </summary>
            <param name="fullSqlStr">删除的sql语句,不带参数</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(`0)">
            <summary>
            根据条件从数据库删除数据
            </summary>
            <param name="condition">条件对象，自动跟据赋值生成sql代码，使用And连接</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.IsDelete(`0)">
            <summary>
            检查是否可以被删除
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(System.Collections.Generic.List{`0})">
            <summary>
            根据条件从数据库删除数据
            </summary>
            <param name="mytableList">条件对象，自动跟据赋值生成sql代码，使用and连接</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(System.String,`0)">
            <summary>
            根据sql语句从数据库删除数据
            </summary>
            <param name="fullSqlStr">删除的sql语句,格式中的参数名必须和数据列名一样，如ID=@ID</param>
            <param name="condition">sql语句中相应的参数</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(System.Int32)">
            <summary>
            根据ID从数据库删除数据
            </summary>
            <param name="id">要删除的数据的ID</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据单值属性删除数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DeleteAll">
            <summary>
            从数据库删除所有数据
            </summary>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DeleteWithRelation(System.Boolean)">
            <summary>
            是否强制删除所有，参数为true，则忽略关联外键
            delete d, s from dcsmember d inner join sp s on d.id = s.spuserid where d.email="xxxxxx"
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            跨表条件删除数据，同时可完成关联删除，返回受影响条数。这里的updataValue与condition将自动获得系统识别的关联，如果未存在这样的关联
            您将获得缺少关联异常提示。当然，您也可以使用Update的其他函数来手工定义关联对象Relation的方式进行操作。
            //delete d, s from dcsmember d inner join sp s on d.id = s.spuserid where d.email="xxxxxx"
            注意Relation 必须实现 主表与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Delete(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            注意Relations 必须实现 主表与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DeleteForSQL(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据关联表的条件值输入，删除对象
            </summary>
            <param name="otherCondition"></param>
            <param name="relationList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.MultiDelete(System.Int32[])">
            <summary>
            根据ID数组从数据库批量删除数据
            </summary>
            <param name="idArray">ID数组</param>
            <returns>删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DeleteMulti(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="attrObj"></param>
            <param name="idOldStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DeleteMulti(System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="idOldStr">传递数据的格式为1,2,3,4</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.MultiDelete(System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="idOldStr">传递数据的格式为1,2,3,4</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.MultiDelete(System.String,System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="idOldStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.MultiDelete(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="attrObj"></param>
            <param name="idOldStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.UpdateAuto(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            自动修改，自增1
            修改时 将某个字段的 值加1。 比如回帖数这样的 方法
            </summary>
            <param name="condition"></param>
            <param name="autoAttributeName">被修改增加值的字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.UpdateAuto(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32)">
            <summary>
            修改某一个字段，让字段值增加一定的数
            </summary>
            <param name="condition"></param>
            <param name="autoAttributeName">被修改增加值的字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据主键属性的值 修改 某个字段的 值。
            </summary>
            <param name="updateKeyAttributeName">要更新的字段</param>
            <param name="updateKeyValue">要更新的值</param>
            <param name="conditionAttributeName">条件字段</param>
            <param name="conditionAttributeValue">条件值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            根据特定条件字段AttributeName，来更新整个value。比如 更新所有角色名为特定值的角色数据。
            </summary>
            <param name="updateValue"></param>
            <param name="AttrList">更新依赖的条件字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,`0)">
            <summary>
            更新数据，根据 更新对象 与条件对象 进行更新
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            支持用其他关联表 更新本表数据，根据 更新对象 与条件对象 和关系对象 进行更新。
            </summary>
            <param name="updateValue"></param>
            <param name="relationList">关联对象</param>
            <param name="conditionList">条件对象，可以是关联对象的条件</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            //zlg关键
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.UpdateValid(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem}@,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            检查是否可以使用
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0)">
            <summary>
            不建议使用这个接口。不然则形成对数据库配置的依赖
            建议传入 主键参数。
            更新数据, 默认根据 优先选择主键列 如主键列不存在，则选择第一个数据列 更新数据。
            </summary>
            <param name="updateValue">要更新的数据，默认将其中主键作为更新依据，没有主键的表，以第一列作为更新依据</param>
            <returns>受影响条数</returns>        
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(System.Collections.Generic.List{`0})">
            <summary>
            根据 优先选择主键列 如主键列不存在，则选择第一个数据列 更新数据。此方法默认对所有对象分别操作。
            </summary>
            <param name="updateValueList">要更新的数据，其中Grpid为条件</param>
            <returns>受影响条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.ForUpdateParse_NoneCondition(`0,System.String,System.String@,System.String@,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            检查 更新并没有指定id列的情况下，设置其使用的id列
            </summary>
            <param name="value"></param>
            <param name="allText"></param>
            <param name="updateText"></param>
            <param name="conditionStr"></param>
            <param name="PKAttrList">主键列，如果为空，则表示从数据库中自行获取</param>
            <returns></returns>       
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            更新数据，返回，受影响条数。这里的updataValue与condition将自动获得系统识别的关联，如果未存在这样的关联
            您将获得缺少关联异常提示。当然，您也可以使用Update的其他函数来手工定义关联对象Relation的方式进行操作。
            </summary>
            <param name="updateValue">更新的对象</param>
            <param name="condition">更新的条件对象</param>
            <returns>受影响条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            跨表更新，关联关系采用参数 RelationFactory.Relation。如果Relation 未充分满足 updataValue与condition的关联信息，则抛出检查期异常
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            注意Relations 必须实现 updataValue与condition的关联信息。
            </summary>
            <param name="updateValue"></param>
            <param name="condition"></param>
            <param name="relationList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectForDataTable">
            <summary>
            查询数据表table所有数据
            </summary>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectForDataTable(`0)">
            <summary>
            查询数据表table所有选定的列
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectForDataTableByIdDesc(`0,`0)">
            <summary>
            按照id递减排序获取数据
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectForDataTable(`0,`0)">
            <summary>
            查询数据库 
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectForDataTable(System.String,`0)">
            <summary>
            查询数据库
            </summary>
            <param name="fullSqlStr">查询语句,条件参数方式为ID=@ID</param>
            <param name="condition">条件参数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select">
            <summary>
            查询数据表table所有数据，value是取值对象，conditon是条件对象
            </summary>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(System.Int32)">
            <summary>
            获取前多少个对象
            </summary>
            <param name="topSum"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据单值属性获取一组对象
            </summary>
            <param name="attr"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(System.String)">
            <summary>
            查询数据表table所有数据
            </summary>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(`0)">
            <summary>
            查询数据表table所有选定的列
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByIdDesc(`0,`0)">
            <summary>
            按照id递减排序获取数据
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(`0,`0)">
            <summary>
            查询数据库 
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetSelectStr(`0,`0)">
            <summary>
            For GetOneRow()
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetSelectStr(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            For Select()
            </summary>
            <param name="AttributeName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetSelectStrByPage(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.String,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            分页获取
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(System.Collections.Generic.List{System.String},`0,`0)">
            <summary>
            查询数据库
            </summary>
            <param name="fullSqlStr">普通查询语句,条件参数方式为ID=@ID</param>
            <param name="condition">条件参数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.iBatisStr">
            <summary>
            实现iBatisStr模式，记录所有业务逻辑操作至SqlMap.xml中
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,`0,System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,`0,System.Int32,System.Int32,System.Int32@,System.String@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="count"></param>
            <param name="cachekey"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            注意Relation 必须实现 value与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            注意Relation 必须实现 value与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            注意Relation 必须实现 value与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            注意Relation 必须实现 value与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Int32,System.Int32,System.Int32@,System.String@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            注意Relation 必须实现 value与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement[])">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            跨表查询:注意Relations 必须满足 value与condition的关联信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Select(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            跨表查询:注意Relation 必须满足 value与condition的关联信息。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.DoSelectByPage(System.Collections.Generic.List{System.String},`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Int32,System.Int32,System.Int32@,System.String@)">
            <summary>
            查询数据库
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowData(`0)">
            <summary>
            获取单条数据
            </summary>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>返回一个table对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowData(System.Int32)">
            <summary>
            根据ID获取单个对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowData(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据单值属性获取单个对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowData(`0,`0)">
            <summary>
            获取单条数据
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为 * ,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>返回一个table对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowData(System.String,`0,`0)">
            <summary>
            获取单条数据
            </summary>
            <param name="fullSqlStr">查询语句，参数使用ID>@ID</param>
            <param name="condition">查询的参数值</param>
            <returns>返回一个table对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetOneValueByAttribute(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            根据属性获取单个数据
            </summary>
            <param name="AttributeName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetOneValue(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据条件获取单个数据
            </summary>
            <param name="value"></param>
            <param name="condition">查询的参数值</param>
            <returns>返回字符型</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            根据单值属性获取单个值
            </summary>
            <param name="attrCondition">条件属性</param>
            <param name="ID"></param>
            <param name="attrResult">结果属性</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.IDataReaderToList(System.Collections.Generic.List{`0}@,`0,System.Data.IDataReader,System.String,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Int32@)">
            <summary>
            //zlg??? 重点
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(System.Int32,System.Int32,System.Int32@)">
            <summary>
            按照ID递减排序，分页获取数据
            </summary>
            <param name="pageSize">单页大小</param>
            <param name="pageIndex">当前页数</param>
            <param name="count">返回一个所有数据的总数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPage(`0,System.Int32,System.Int32,System.Int32@)">
            <summary>
            按照ID递减排序，分页获取数据
            </summary>
            <param name="condition">查询的条件,通过AND连接</param>
            <param name="pageSize">单页大小</param>
            <param name="pageIndex">当前页数</param>
            <param name="count">返回一个所有数据的总数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPrimaryKey(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据主键延迟加载关系属性
            </summary>
            <param name="primaryTable"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.SelectByPrimaryKey(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Boolean)">
            <summary>
            根据主键延迟加载关系属性，是否抛出异常
            </summary>
            <param name="primaryTable"></param>
            <param name="IsThrowError"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowDataByForeignKey(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据外键延迟加载关系属性
            </summary>
            <param name="foreignTable"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.GetRowDataByForeignKey(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Boolean)">
            <summary>
            根据外键延迟加载关系属性
            </summary>
            <param name="foreignTable"></param>
            <param name="IsThrowError"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertQuickSubmit``1(System.Collections.Generic.List{``0})">
            <summary>
            海量插入数据方案一
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.InsertSuperPool``1(System.Collections.Generic.List{``0})">
            <summary>
            海量数据插入缓冲池
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.IsTransaction">
            <summary>
            http://book.51cto.com/art/200807/80439.htm 事务系统相关
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.AttrID">
            <summary>
            默认的ID列
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.FilePath">
            <summary>
            数据库服务器的\\ip\盘符 路径，海量数据插入时，用到。
            </summary>    
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Config.IsLogChangeDic">
            <summary>
            记录到日志里面，日志位置与数据源对应
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Config.IsLogChangeBool">
            <summary>
            是否保存日志
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DAL.DALTable`1.Config.IsLogDeleted">
            <summary>
            是否保存已删除的记录
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.RowFilter(System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.ExecSQL(System.String)">
            <summary>
            增加删除修改用的sql
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.ExecSQL(System.String,System.Data.CommandType)">
            <summary>
            执行存储过程，采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.qDataRow(System.String)">
            <summary>
            查询数据返回一个行
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.qDataRow(System.String,System.Data.CommandType)">
            <summary>
            执行存储过程，采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.qDataSet(System.String)">
            <summary>
            查询数据返回多个表格
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.qDataTable(System.String)">
            <summary>
            查询数据返回一个表格
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetOneValue(System.String)">
            <summary>
            查询数据返回单个值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Factory">
            <summary>
            工厂方法，生产唯一操作对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Factory(System.String)">
            <summary>
            工厂方法，生产唯一操作对象
            </summary>
            <param name="connectStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.InsertQuick2(System.Collections.Generic.List{`0})">
            <summary>
            海量插入数据方案二
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.TestInsertSuperPool(System.Collections.Generic.List{`0})">
            <summary>
            测试海量数据保存是否具备条件
            </summary>
            <typeparam name="MyTable"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement[])">
            <summary>
            跨表查询:Select(取值对象，关系，外键表取值对象，parames 条件对象)  注意Relations 必须满足 value与condition的关联信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            跨表查询:Select(取值对象，关系List，外键表取值对象List，条件对象List)  注意Relations 必须满足 value与condition的关联信息
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetIdentityValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            获取某个表中的自定义自增字段的自增1的值，
            注意，这里的返回值如果是 int.MinValue ，是存在异常；其他则是正常。
            </summary>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetMaxValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            返回某个字段自增1的值，不是最大值
            </summary>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Exists(`0)">
            <summary>
            根据条件判断是否存在记录
            </summary>
            <param name="condition">条件对象</param>
            <returns>返回是否存在</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Sum(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            获取该对象为条件的计数，如果返回-1，代表sql执行结果异常，请检查程序代码
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Count(`0)">
            <summary>
            获取满足条件的记录数，获取该对象为条件的计数，如果返回-1，代表sql执行结果异常，请检查程序代码
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.CountQuick">
            <summary>
            快速获取记录数：获取该对象为条件的计数，如果返回-1，代表sql执行结果异常，请检查程序代码
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Max(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            获取某属性最大值。请自行转换为Int
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Min(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            根据条件获取某属性最小值。请自行转换为Int
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Avg(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            根据条件获取某属性平均值。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.InsertOrUpdate(`0)">
            <summary>
            自动保存，以插入或保存操作，由中间层自动判断
            </summary>
            <param name="value">要自动保存的实体</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SaveOrUpdate(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            插入或保存，请输入主键属性
            </summary>
            <param name="value">实体对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SaveOrUpdateQuick(System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            必须输入主要属性
            </summary>
            <param name="valueList"></param>
            <param name="primaryKeyAttributeItemParams"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SaveOrUpdate(`0)">
            <summary>
            插入或保存，由中间层自动判断
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SaveOrUpdate(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            插入或保存，请输入主键属性
            </summary>
            <param name="value">实体对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem[])">
            <summary>
            将实体对象插入到数据库，table不能为空 返回ExecuteNonQuery的返回值，返回-2 table=null.
            </summary>
            <param name="value">要插入的实体</param>
            <param name="KeyField">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32)">
            <summary>
            将实体对象插入到数据库，table不能为空 返回ExecuteNonQuery的返回值，返回-2 table=null.
            </summary>
            <param name="value">插入的实体对象</param>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <param name="minValue">自增的种子值，或叫最小值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(`0,System.String)">
            <summary>
            插入操作
            </summary>
            <param name="value">插入实体对象</param>
            <param name="KeyField">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(`0)">
            <summary>
            将table数据对象插入到数据库，table不能为空  返回ExecuteNonQuery的返回值
            </summary>
            <param name="myTable">要插入的实体集合</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(System.String,`0)">
            <summary>
            通过 fullSqlStr与 value参数将对象插入到数据库
            </summary>
            <param name="fullSqlStr">sql语句</param>
            <param name="value">含sql参数值的实体对象</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(System.Collections.Generic.List{`0})">
            <summary>
            批量将实体对象插入到数据库，table不能为空 返回ExecuteNonQuery的返回值
            </summary>
            <param name="tableList">要插入的实体集合</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Insert(System.Collections.Generic.List{`0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            批量将实体对象插入到数据库，table不能为空 返回ExecuteNonQuery的返回值
            </summary>
            <param name="tableList">要插入的实体集合</param>
            <param name="KeyField">varchar类型的自定义增长字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.InsertReturnID(`0)">
            <summary>
            存在标识值时才能调用该方法哦，将实体对象插入到数据库，并返回取得的新ID，table不能为空  返回ExecuteNonQuery的返回值
            </summary>
            <param name="news">要插入的实体</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.InsertReturnID(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            存在标识值时才能调用该方法哦，将实体对象插入到数据库，并返回取得的新ID，table不能为空  返回UserKeyField的新值
            </summary>
            <param name="news">要插入的实体</param>
            <param name="UserKeyField">varchar类型的自定义增长字段</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(`0)">
            <summary>
            根据条件从数据库删除数据
            </summary>
            <param name="condition">条件对象，自动跟据赋值生成sql代码，使用and连接，
            默认为允许赋空值，当删除数据失败的时候，请留意实体中是否包含空值</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(System.Collections.Generic.List{`0})">
            <summary>
            根据条件从数据库删除数据
            </summary>
            <param name="tableList">删除的实体集合，采用一次性提交数据库，逐条删除</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(System.String,`0)">
            <summary>
            根据sql语句从数据库删除数据
            </summary>
            <param name="sqlStr">删除的sql语句,格式中的参数名必须和数据列名一样，如ID=@ID</param>
            <param name="condition">sql语句中相应的参数</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(System.String)">
            <summary>
            根据sql语句从数据库删除数据
            </summary>
            <param name="sqlStr">删除的sql语句,不带参数</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(System.Int32)">
            <summary>
            根据ID从数据库删除数据
            </summary>
            <param name="id">要删除的数据的ID</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据单值属性删除数据
            </summary>
            <param name="attr">要删除的数据的属性</param>
            <param name="id">要删除的数据值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.IsDelete(`0)">
            <summary>
            检查是否可以被删除，第一步过滤是否具备主键，第二步过滤是否具备相应关联键，第三步检查关联外键是否存在记录
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.DeleteAll">
            <summary>
            从本数据表删除所有数据
            </summary>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.DeleteWithRelation(System.Boolean)">
            <summary>
            是否强制删除所有，参数为true，则忽略关联外键
            delete d, s from dcsmember d inner join sp s on d.id = s.spuserid where d.email="xxxxxx"
            </summary>
            <param name="IsForceDeleteWhenExistRelation">是否强制删除</param>
            <returns>返回删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Exists(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            判断是否存在关联记录，条件（主键表）是否存在外键同时符合主键表条件
            </summary>
            <param name="condition"></param>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            注意Relation 必须实现 主表与condition的关联信息。
            </summary>
            <param name="condition">条件对象</param>
            <param name="relation1">关系对象1</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            删除操作
            </summary>
            <param name="condition">条件对象</param>
            <param name="relation1">关系对象1</param>
            <param name="relation2">关系对象2</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            注意Relations 必须实现 主表与condition的关联信息。
            </summary>
            <param name="condition">条件对象</param>
            <param name="relationList">关系对象集合</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Delete(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            //zlg???重点
            </summary>
            <param name="condition"></param>
            <param name="relationList"></param>
            <param name="otherConditionList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.UpdateAuto(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            自动修改，自增1
            修改时 将某个字段的 值加1。 比如回帖数这样的 方法
            </summary>
            <param name="condition"></param>
            <param name="autoAttributeName">被修改增加值的字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.UpdateAuto(`0,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32)">
            <summary>
            修改某一个字段，让字段值增加一定的数
            </summary>
            <param name="condition"></param>
            <param name="autoAttributeName">被修改增加值的字段</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据主键属性的值 修改 某个字段的 值。
            </summary>
            <param name="updateKeyAttributeName">要更新的字段</param>
            <param name="updateKeyValue">要更新的值</param>
            <param name="conditionAttributeName">条件字段</param>
            <param name="conditionAttributeValue">条件值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,`0)">
            <summary>
            更新数据 根据 旧状态对象 或者 条件对象 更新至新状态对象
            </summary>
            <param name="value">value为更新的内容</param>
            <param name="condition">condition为更新的条件,使用AND连接</param>
            <returns>更新的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0)">
            <summary>
            更新操作，根据主键列，或者第一列更新数据。
            </summary>
            <param name="value">更新的目标实体对象，要更新的数据，其中第一列为条件</param>
            <returns>受影响条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(System.Collections.Generic.List{`0})">
            <summary>
            更新数据,根据第一列更新数据。
            </summary>
            <param name="tableList">更新的目标实体对象集合</param>
            <returns>受影响条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            更新数据，返回，受影响条数。这里的updataValue与condition将自动获得系统识别的关联，如果未存在这样的关联
            您将获得缺少关联异常提示。当然，您也可以使用Update的其他函数来手工定义关联对象Relation的方式进行操作。
            </summary>
            <param name="updateValue">更新的目标实体对象</param>
            <param name="condition">更新的条件实体对象</param>
            <returns>受影响条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            更新操作，注意Relation 必须实现 updataValue与condition的关联信息。
            </summary>
            <param name="updateValue">更新的目标实体对象</param>
            <param name="condition">更新的条件实体对象</param>
            <param name="relation1">关系对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            更新操作
            </summary>
            <param name="updateValue">更新的目标实体对象</param>
            <param name="condition">更新的条件实体对象</param>
            <param name="relation1">关系对象1</param>
            <param name="relation2">关系对象2</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            更新操作
            </summary>
            <param name="updateValue">更新的目标实体对象</param>
            <param name="condition">更新的条件实体对象</param>
            <param name="relation1">关系对象</param>
            <param name="relation2">关系对象</param>
            <param name="relation3">关系对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            更新操作
            </summary>
            <param name="updateValue">更新的目标实体对象</param>
            <param name="condition">更新的条件实体对象</param>
            <param name="relation1">关系对象</param>
            <param name="relation2">关系对象</param>
            <param name="relation3">关系对象</param>
            <param name="relation4">关系对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            更新操作，注意Relations 必须实现 updataValue与condition的关联信息。
            </summary>
            <param name="updateValue">更新的目标实体对象</param>
            <param name="condition">更新的条件实体对象</param>
            <param name="relationList">关系对象</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Update(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            新接口，重要
            </summary>
            <param name="updateValue"></param>
            <param name="relationList"></param>
            <param name="conditionList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.MultiDelete(System.Int32[])">
            <summary>
            根据ID数组从数据库批量删除数据
            </summary>
            <param name="idArray">ID数组</param>
            <returns>删除的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.MultiDelete(System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为 1,2,3,4
            </summary>
            <param name="idStr">传递数据的格式为1,2,3,4</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.MultiDelete(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="attrObj">属性</param>
            <param name="idOldStr">属性值集合</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.MultiDelete(System.String,System.String)">
            <summary>
            从数据库批量删除数据，传递数据的格式为1,2,3,4
            </summary>
            <param name="FieldName">属性名</param>
            <param name="idOldStr">属性值集合</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectForDataTable">
            <summary>
            查询数据表table所有数据
            </summary>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectForDataTable(`0)">
            <summary>
            查询数据表table所有选定的列
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectForDataTable(`0,`0)">
            <summary>
            查询数据库
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectForDataTableByIdDesc(`0,`0)">
            <summary>
            按照id递减排序获取数据
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectForDataTable(System.String,`0)">
            <summary>
            查询数据库
            </summary>
            <param name="sqlStr">查询语句,条件参数方式为ID=@ID</param>
            <param name="condition">条件参数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select">
            <summary>
            查询数据表table所有数据
            </summary>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(System.Int32)">
            <summary>
            取前topSum个对象
            </summary>
            <param name="topSum">取值前几条记录</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据单值属性为条件获取一组对象
            </summary>
            <param name="attr">条件属性</param>
            <param name="id">条件属性值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(`0)">
            <summary>
            查询数据表table所有选定的列
            </summary>
            <param name="value">取值实体对象</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(`0,`0)">
            <summary>
            查询数据库 
            </summary>
            <param name="value">取值实体对象，value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
            <param name="condition">条件实体对象</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectByIdDesc(`0,`0)">
            <summary>
            按照id递减排序获取数据
            </summary>
            <param name="value">取值实体对象</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Select(System.String,`0)">
            <summary>
            查询操作
            </summary>
            <param name="sqlStr">查询语句,条件参数方式为ID=@ID</param>
            <param name="condition">条件实体对象</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetRowData(`0,`0)">
            <summary>
            获取单条数据
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为 * ,既为所有</param>
            <param name="condition">查询的条件,通过AND连接</param>
            <returns>返回一个table对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetRowData(`0)">
            <summary>
            获取单条数据
            </summary>
            <param name="condition">条件对象,默认通过AND连接</param>
            <returns>返回一个table对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetRowData(System.Int32)">
            <summary>
            根据ID获取单个对象
            </summary>
            <param name="ID">编号值</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetRowData(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>
            根据单值属性获取单个对象
            </summary>
            <param name="attrID">条件属性</param>
            <param name="ID">条件属性值</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectByPage(System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(页大小，页码，ref 返回总页数)
            </summary>
            <param name="pageSize">单页大小</param>
            <param name="pageIndex">当前页数</param>
            <param name="count">返回一个所有数据的总数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectByPage(`0,System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(条件对象，页大小，页码，ref 返回总页数)
            </summary>
            <param name="condition">查询的条件,通过AND连接</param>
            <param name="pageSize">单页大小</param>
            <param name="pageIndex">当前页数</param>
            <param name="count">返回一个所有数据的总数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectByPage(`0,`0,System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页获取，SelectByPage(取值对象，条件对象，页大小，页码，ref 返回总页数)
            </summary>
            <param name="value">取值实体对象</param>
            <param name="condition">条件实体对象集合，查询的条件,通过AND连接</param>
            <param name="pageSize">单页大小</param>
            <param name="pageIndex">当前页数</param>
            <param name="count">返回一个所有数据的总数</param>
            <returns>table的动态数组</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectByPage(`0,AgileFrame.Orm.PersistenceLayer.Model.Relation,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Int32,System.Int32,System.Int32@)">
            <summary>
            多表查询分页： SelectByPage(取值对象，关系，外键表取值对象，条件对象，页大小，页码，总页数)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.SelectByPage(`0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Int32,System.Int32,System.Int32@)">
            <summary>
            多表查询分页： SelectByPage(取值对象，关系List，外键表取值对象List，条件对象List，页大小，页码，总页数)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.Execute(System.String,`0)">
            <summary>
            运行根据sql语句
            </summary>
            <param name="sqlStr">sql语句,格式中的参数名必须和数据列名一样，如ID=@ID</param>
            <param name="value">sql参数的赋值对象</param>
            <returns>返回操作的条数</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetOneValueByAttribute(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,`0)">
            <summary>
            根据属性获取单个值
            </summary>
            <param name="AttributeName">取值属性</param>
            <param name="condition">条件对象</param>
            <returns>返回字符型</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetOneValue(`0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据条件获取单个值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable`1.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            根据单值属性获取单个值
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.DataSavePoolStat">
            <summary>
            用来做外部接口，按key来查询数据对象是否已保存成功，通过 DicTaskSaveValuePool判断
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.DataSavePoolStat.DicTaskSaveValuePool">
            <summary>
            外部判断是否执行成功，taskCode，saveErr bool  处理过并且正确的，被移除；未处理和处理后失败的，为true
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTableSuper`1.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTableSuper`1.CloseAndDispose">
            <summary>
            关闭
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DAL.PerformanceService">
            <summary>
            针对排序 和 所有的条件对象进行分析。性能分析，索引，like语句等
            1、假定存在索引 I(a,b,c,d) 这样的字段,where条件中必须存在字段 a  才能利用索引
            2、
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve">
            <summary>
            <para>审批流程</para>
            <para>与Ec_approve数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.name_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.memo_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.username_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.department_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.used_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.creator_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.last_updater_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.created_at_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.updated_at_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.userselected_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.#ctor(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Tabid">
            <summary> 选择模块ID Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Name">
            <summary> 流程名称 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Memo">
            <summary> 备注 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Username">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Department">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Used">
            <summary> 是否激活1是0否 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Creator">
            <summary> 创建人 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Last_updater">
            <summary> 最后一次修改人 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Created_at">
            <summary> 创建日期 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Updated_at">
            <summary> 修改日期(datetime(8)) Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve._Userselected">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Tabid">
            <summary> 选择模块ID，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Name">
            <summary> 流程名称，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Memo">
            <summary> 备注，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Username">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Department">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Used">
            <summary> 是否激活1是0否，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Creator">
            <summary> 创建人，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Last_updater">
            <summary> 最后一次修改人，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Created_at">
            <summary> 创建日期，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Updated_at">
            <summary> 修改日期(datetime(8))，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Userselected">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Tabid">
            <summary>选择模块ID</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Name">
            <summary>流程名称</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Memo">
            <summary>备注</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Username">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Department">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Used">
            <summary>是否激活1是0否</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Creator">
            <summary>创建人</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Last_updater">
            <summary>最后一次修改人</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Created_at">
            <summary>创建日期</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Updated_at">
            <summary>修改日期(datetime(8))</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approve.Attribute.Userselected">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep">
            <summary>
            <para>审批步骤</para>
            <para>与Ec_approvestep数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.approveid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.name_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.memo_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.ended_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.isfirststep_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.sequnce_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.nextstep_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.created_at_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.updated_at_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.alterapproveowner_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.#ctor(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Approveid">
            <summary> 所对应的审批流程的id Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Name">
            <summary> 审批步骤名称 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Memo">
            <summary> 备注 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Ended">
            <summary> 是否可以结束整个流程 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Isfirststep">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Sequnce">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Nextstep">
            <summary> 下一个步骤 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Created_at">
            <summary> 创建时间 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Updated_at">
            <summary> 修改时间 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep._Alterapproveowner">
            <summary> 是否修改审批人 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Approveid">
            <summary> 所对应的审批流程的id，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Name">
            <summary> 审批步骤名称，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Memo">
            <summary> 备注，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Ended">
            <summary> 是否可以结束整个流程，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Isfirststep">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Sequnce">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Nextstep">
            <summary> 下一个步骤，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Created_at">
            <summary> 创建时间，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Updated_at">
            <summary> 修改时间，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Alterapproveowner">
            <summary> 是否修改审批人，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Approveid">
            <summary>所对应的审批流程的id</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Name">
            <summary>审批步骤名称</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Memo">
            <summary>备注</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Ended">
            <summary>是否可以结束整个流程</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Isfirststep">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Sequnce">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Nextstep">
            <summary>下一个步骤</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Created_at">
            <summary>创建时间</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Updated_at">
            <summary>修改时间</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_approvestep.Attribute.Alterapproveowner">
            <summary>是否修改审批人</summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country">
            <summary>
            <para>地区</para>
            <para>与Ec_bill_country数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.actualfieldid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.actualfieldname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.sortorderid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.presence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.thelevel_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.parentfieldid_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country._Actualfieldid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country._Actualfieldname">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country._Sortorderid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country._Presence">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country._Thelevel">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country._Parentfieldid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Actualfieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Actualfieldname">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Sortorderid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Presence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Thelevel">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Parentfieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute.Actualfieldid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute.Actualfieldname">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute.Sortorderid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute.Presence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute.Thelevel">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_bill_country.Attribute.Parentfieldid">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks">
            <summary>
            <para>显示区域</para>
            <para>与Ec_blocks数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.blockid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.blocklabel_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.sequence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.show_title_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.visible_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.create_view_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.edit_view_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.detail_view_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Blockid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Tabid">
            <summary> 模块id Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Blocklabel">
            <summary> 显示区域名称 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Sequence">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Show_title">
            <summary> 标题 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Visible">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Create_view">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Edit_view">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks._Detail_view">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Blockid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Tabid">
            <summary> 模块id，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Blocklabel">
            <summary> 显示区域名称，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Sequence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Show_title">
            <summary> 标题，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Visible">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Create_view">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Edit_view">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Detail_view">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Blockid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Tabid">
            <summary>模块id</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Blocklabel">
            <summary>显示区域名称</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Sequence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Show_title">
            <summary>标题</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Visible">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Create_view">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Edit_view">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_blocks.Attribute.Detail_view">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings">
            <summary>
            <para></para>
            <para>与Ec_customsharings数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.sharingstype_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.whoshared_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.shared_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.sharingsid_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings._Sharingstype">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings._Whoshared">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings._Shared">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings._Sharingsid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Sharingstype">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Whoshared">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Shared">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Sharingsid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Attribute.Sharingstype">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Attribute.Whoshared">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Attribute.Shared">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_customsharings.Attribute.Sharingsid">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel">
            <summary>
            <para></para>
            <para>与Ec_datashare_module_rel数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.shareid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.relationtype_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.#ctor(System.Int32,System.Int32,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel._Shareid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel._Tabid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel._Relationtype">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Shareid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Relationtype">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Attribute.Shareid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_datashare_module_rel.Attribute.Relationtype">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field">
            <summary>
            <para>全局字段表</para>
            <para>与Ec_def_org_field数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.fieldid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.visible_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.readonly_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field._Fieldid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field._Tabid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field._Visible">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field._Readonly">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Fieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Visible">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Readonly">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Attribute.Fieldid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Attribute.Visible">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_field.Attribute.Readonly">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share">
            <summary>
            <para></para>
            <para>与Ec_def_org_share数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.ruleid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.permission_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.editstatus_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share._Ruleid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share._Tabid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share._Permission">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share._Editstatus">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Ruleid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Permission">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Editstatus">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Attribute.Ruleid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Attribute.Permission">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_def_org_share.Attribute.Editstatus">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname">
            <summary>
            <para>模块实体类配置表</para>
            <para>与Ec_entityname数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.modulename_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.tablename_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.fieldname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.entityidfield_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.remarks_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname._Modulename">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname._Tablename">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname._Fieldname">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname._Entityidfield">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname._Remarks">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Modulename">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Tablename">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Fieldname">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Entityidfield">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Remarks">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute.Modulename">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute.Tablename">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute.Fieldname">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute.Entityidfield">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_entityname.Attribute.Remarks">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping">
            <summary>
            <para></para>
            <para>与Ec_fidmapping数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.fldmappingid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.relyonmod_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.relyonfld_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.controlmod_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.controlfld_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.operator_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.operationtime_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.setype_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Fldmappingid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Relyonmod">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Relyonfld">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Controlmod">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Controlfld">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Operator">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Operationtime">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping._Setype">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Fldmappingid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Relyonmod">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Relyonfld">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Controlmod">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Controlfld">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Operator">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Operationtime">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Setype">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Fldmappingid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Relyonmod">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Relyonfld">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Controlmod">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Controlfld">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Operator">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Operationtime">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_fidmapping.Attribute.Setype">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_field">
            <summary>
            <para>字段信息表</para>
            <para>与Ec_field数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.fieldid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.columnname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.tablename_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.generatedtype_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.uitype_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.fieldname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.fieldlabel_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.readonly_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.presence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.selected_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.maximumlength_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.sequence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.block_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.displaytype_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.typeofdata_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.quickcreate_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.quickcreatesequence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.info_type_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.ctrltype_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.#ctor(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Fieldid">
            <summary> 字段ID Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Tabid">
            <summary> 模块ID Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Columnname">
            <summary> 列名 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Tablename">
            <summary> 表名 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Generatedtype">
            <summary> 生成类型:[Enum-{0:系统生成},{1:非系统生成}] Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Uitype">
            <summary> Crm控件类型:[Enum-{1:数字},{2:文本}] Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Fieldname">
            <summary> 字段名 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Fieldlabel">
            <summary> 字段标签 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Readonly">
            <summary> 只读:[Enum-{0:否},{1:是}] Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Presence">
            <summary> 是否存在:[Enum-{0:启用},{1:禁用}] Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Selected">
            <summary> 是否选择:[Enum-{0:否},{1:是}] Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Maximumlength">
            <summary> 最大长度 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Sequence">
            <summary> 顺序号 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Block">
            <summary> 布局编号 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Displaytype">
            <summary> 状态:[Enum-{0:启用},{1:禁用}] Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Typeofdata">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Quickcreate">
            <summary> 是否快速创建:[Enum-{0:否},{1:是}] Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Quickcreatesequence">
            <summary> 快速创建的次序 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._Info_type">
            <summary> 类型:[Enum-{BAS:基础},{ADV:高级}] Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field._CtrlType">
            <summary> 控件类型:[Enum-{InputString:单行文本},{InputDate:日期},{InputDecimal:数字},{InputNumber:整数},{InputDateTime:日期时间},{InputPassWord:密码},{InputEmail:Email},{InputIDCard:ID卡},{InputIPAddr:IP地址},{InputMobile:手机号码},{InputPhone:电话},{InputPostCode:邮编},{Text:大文本内容},{SmallText:小文本200字},{HTML:HTML内容},{SelectDrop:下拉框},{SelectSingle:单选框},{SelectMultiple:多选框},{RadioBoxList:RadioBoxList},{CheckBoxList:CheckBoxList},{CalNumber:CalNumber},{CalString:CalString},{FileUpUpDoc:FileUpUpDoc},{FileUpImage:FileUpImage},{OpenSelStaff:选择员工},{OpenSelDept:选择部门},{OpenSelExistsRec:选择存在的记录},{Select_RelationUser:选择关联用户},{Select_RelationFK:选择相关对象}] Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Fieldid">
            <summary> 字段ID，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Tabid">
            <summary> 模块ID，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Columnname">
            <summary> 列名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Tablename">
            <summary> 表名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Generatedtype">
            <summary> 生成类型:[Enum-{0:系统生成},{1:非系统生成}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Uitype">
            <summary> Crm控件类型:[Enum-{1:数字},{2:文本}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Fieldname">
            <summary> 字段名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Fieldlabel">
            <summary> 字段标签，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Readonly">
            <summary> 只读:[Enum-{0:否},{1:是}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Presence">
            <summary> 是否存在:[Enum-{0:启用},{1:禁用}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Selected">
            <summary> 是否选择:[Enum-{0:否},{1:是}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Maximumlength">
            <summary> 最大长度，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Sequence">
            <summary> 顺序号，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Block">
            <summary> 布局编号，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Displaytype">
            <summary> 状态:[Enum-{0:启用},{1:禁用}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Typeofdata">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Quickcreate">
            <summary> 是否快速创建:[Enum-{0:否},{1:是}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Quickcreatesequence">
            <summary> 快速创建的次序，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Info_type">
            <summary> 类型:[Enum-{BAS:基础},{ADV:高级}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.CtrlType">
            <summary> 控件类型:[Enum-{InputString:单行文本},{InputDate:日期},{InputDecimal:数字},{InputNumber:整数},{InputDateTime:日期时间},{InputPassWord:密码},{InputEmail:Email},{InputIDCard:ID卡},{InputIPAddr:IP地址},{InputMobile:手机号码},{InputPhone:电话},{InputPostCode:邮编},{Text:大文本内容},{SmallText:小文本200字},{HTML:HTML内容},{SelectDrop:下拉框},{SelectSingle:单选框},{SelectMultiple:多选框},{RadioBoxList:RadioBoxList},{CheckBoxList:CheckBoxList},{CalNumber:CalNumber},{CalString:CalString},{FileUpUpDoc:FileUpUpDoc},{FileUpImage:FileUpImage},{OpenSelStaff:选择员工},{OpenSelDept:选择部门},{OpenSelExistsRec:选择存在的记录},{Select_RelationUser:选择关联用户},{Select_RelationFK:选择相关对象}]，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Fieldid">
            <summary>字段ID</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Tabid">
            <summary>模块ID</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Columnname">
            <summary>列名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Tablename">
            <summary>表名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Generatedtype">
            <summary>生成类型:[Enum-{0:系统生成},{1:非系统生成}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Uitype">
            <summary>Crm控件类型:[Enum-{1:数字},{2:文本}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Fieldname">
            <summary>字段名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Fieldlabel">
            <summary>字段标签</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Readonly">
            <summary>只读:[Enum-{0:否},{1:是}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Presence">
            <summary>是否存在:[Enum-{0:启用},{1:禁用}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Selected">
            <summary>是否选择:[Enum-{0:否},{1:是}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Maximumlength">
            <summary>最大长度</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Sequence">
            <summary>顺序号</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Block">
            <summary>布局编号</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Displaytype">
            <summary>状态:[Enum-{0:启用},{1:禁用}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Typeofdata">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Quickcreate">
            <summary>是否快速创建:[Enum-{0:否},{1:是}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Quickcreatesequence">
            <summary>快速创建的次序</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.Info_type">
            <summary>类型:[Enum-{BAS:基础},{ADV:高级}]</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_field.Attribute.CtrlType">
            <summary>控件类型:[Enum-{InputString:单行文本},{InputDate:日期},{InputDecimal:数字},{InputNumber:整数},{InputDateTime:日期时间},{InputPassWord:密码},{InputEmail:Email},{InputIDCard:ID卡},{InputIPAddr:IP地址},{InputMobile:手机号码},{InputPhone:电话},{InputPostCode:邮编},{Text:大文本内容},{SmallText:小文本200字},{HTML:HTML内容},{SelectDrop:下拉框},{SelectSingle:单选框},{SelectMultiple:多选框},{RadioBoxList:RadioBoxList},{CheckBoxList:CheckBoxList},{CalNumber:CalNumber},{CalString:CalString},{FileUpUpDoc:FileUpUpDoc},{FileUpImage:FileUpImage},{OpenSelStaff:选择员工},{OpenSelDept:选择部门},{OpenSelExistsRec:选择存在的记录},{Select_RelationUser:选择关联用户},{Select_RelationFK:选择相关对象}]</summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num">
            <summary>
            <para></para>
            <para>与Ec_modentity_num数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.num_id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.semodule_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.prefix_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.start_id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.cur_id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.active_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num._Num_id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num._Semodule">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num._Prefix">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num._Start_id">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num._Cur_id">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num._Active">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Num_id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Semodule">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Prefix">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Start_id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Cur_id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Active">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute.Num_id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute.Semodule">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute.Prefix">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute.Start_id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute.Cur_id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modentity_num.Attribute.Active">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist">
            <summary>
            <para>模板列表?</para>
            <para>与Ec_modulelist数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.type_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.filename_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.filememo_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist._Tabid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist._Type">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist._Filename">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist._Filememo">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Type">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Filename">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Filememo">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Attribute.Type">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Attribute.Filename">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modulelist.Attribute.Filememo">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners">
            <summary>
            <para>模板拥有者?</para>
            <para>与Ec_moduleowners数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.user_id_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.#ctor(System.Int32,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners._User_id">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.User_id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_moduleowners.Attribute.User_id">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules">
            <summary>
            <para>模块开发</para>
            <para>与Ec_modules数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.enname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.cnname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.status_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.parenttabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.displayorder_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.deleted_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.description_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.is_accountid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.is_contactid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.approve_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.importexport_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.attachment_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.product_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.relatedmodule_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.#ctor(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Enname">
            <summary> 英文名 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Cnname">
            <summary> 中文名 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Status">
            <summary> 状态 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Parenttabid">
            <summary> 父级模块ID Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Displayorder">
            <summary> 显示顺序 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Deleted">
            <summary> 已被删除 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Description">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Is_accountid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Is_contactid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Approve">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Importexport">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Attachment">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Product">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules._Relatedmodule">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Enname">
            <summary> 英文名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Cnname">
            <summary> 中文名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Status">
            <summary> 状态，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Parenttabid">
            <summary> 父级模块ID，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Displayorder">
            <summary> 显示顺序，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Deleted">
            <summary> 已被删除，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Description">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Is_accountid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Is_contactid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Approve">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Importexport">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attachment">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Product">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Relatedmodule">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Enname">
            <summary>英文名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Cnname">
            <summary>中文名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Status">
            <summary>状态</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Parenttabid">
            <summary>父级模块ID</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Displayorder">
            <summary>显示顺序</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Deleted">
            <summary>已被删除</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Description">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Is_accountid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Is_contactid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Approve">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Importexport">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Attachment">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Product">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_modules.Attribute.Relatedmodule">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield">
            <summary>
            <para>级联字段</para>
            <para>与Ec_multifield数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.multifieldid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.totallevel_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.multifieldname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.tablename_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield._Multifieldid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield._Tabid">
            <summary> 模块id Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield._Totallevel">
            <summary> 级联字段数 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield._Multifieldname">
            <summary> 级联字段名称 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield._Tablename">
            <summary> 缔造的表名称 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Multifieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Tabid">
            <summary> 模块id，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Totallevel">
            <summary> 级联字段数，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Multifieldname">
            <summary> 级联字段名称，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Tablename">
            <summary> 缔造的表名称，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Attribute.Multifieldid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Attribute.Tabid">
            <summary>模块id</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Attribute.Totallevel">
            <summary>级联字段数</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Attribute.Multifieldname">
            <summary>级联字段名称</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_multifield.Attribute.Tablename">
            <summary>缔造的表名称</summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab">
            <summary>
            <para></para>
            <para>与Ec_org_share_action2tab数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.share_action_id_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.#ctor(System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab._Share_action_id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Share_action_id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_org_share_action2tab.Attribute.Share_action_id">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab">
            <summary>
            <para>主菜单</para>
            <para>与Ec_parenttab数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.parenttabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.parenttab_label_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.sequence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.visible_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.#ctor(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab._Parenttabid">
            <summary> ID Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab._Parenttab_label">
            <summary> 主菜单（英文） Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab._Sequence">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab._Visible">
            <summary> 是否可见（0可见） Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Parenttabid">
            <summary> ID，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Parenttab_label">
            <summary> 主菜单（英文），推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Sequence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Visible">
            <summary> 是否可见（0可见），推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Attribute.Parenttabid">
            <summary>ID</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Attribute.Parenttab_label">
            <summary>主菜单（英文）</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Attribute.Sequence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttab.Attribute.Visible">
            <summary>是否可见（0可见）</summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel">
            <summary>
            <para></para>
            <para>与Ec_parenttabrel数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.parenttabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.sequence_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel._Parenttabid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel._Tabid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel._Sequence">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Parenttabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Sequence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Attribute.Parenttabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_parenttabrel.Attribute.Sequence">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist">
            <summary>
            <para>下拉框选项</para>
            <para>与Ec_picklist数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.coltext_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.colvalue_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.colname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.sequence_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.#ctor(System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist._Id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist._ColText">
            <summary> 下拉框的显示文本 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist._Colvalue">
            <summary> 下拉框的值 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist._Colname">
            <summary> 所属选项的值 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist._Sequence">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.ColText">
            <summary> 下拉框的显示文本，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Colvalue">
            <summary> 下拉框的值，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Colname">
            <summary> 所属选项的值，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Sequence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Attribute.Id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Attribute.ColText">
            <summary>下拉框的显示文本</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Attribute.Colvalue">
            <summary>下拉框的值</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Attribute.Colname">
            <summary>所属选项的值</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_picklist.Attribute.Sequence">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments">
            <summary>
            <para>评价?</para>
            <para>与Ec_prodcomments数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.fldname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.fldtitle_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.fldwidht_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.fldcheck_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.sorder_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments._Fldname">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments._Fldtitle">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments._Fldwidht">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments._Fldcheck">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments._Sorder">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Fldname">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Fldtitle">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Fldwidht">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Fldcheck">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Sorder">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute.Fldname">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute.Fldtitle">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute.Fldwidht">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute.Fldcheck">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodcomments.Attribute.Sorder">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist">
            <summary>
            <para></para>
            <para>与Ec_prodspeclist数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.productid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.specid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.entityid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.specnum_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.descri_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.sorder_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.String,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Productid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Specid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Entityid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Specnum">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Descri">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist._Sorder">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Productid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Specid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Entityid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Specnum">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Descri">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Sorder">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Productid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Specid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Entityid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Specnum">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Descri">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclist.Attribute.Sorder">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog">
            <summary>
            <para></para>
            <para>与Ec_prodspeclog数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.speclogid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.entityid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.specid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.productid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.specnum_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.subject_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.setype_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.smcreatorid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.createdtime_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.String,System.String,System.Int32,System.DateTime)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Speclogid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Tabid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Entityid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Specid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Productid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Specnum">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Subject">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Setype">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Smcreatorid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog._Createdtime">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Speclogid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Entityid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Specid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Productid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Specnum">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Subject">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Setype">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Smcreatorid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Createdtime">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Speclogid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Entityid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Specid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Productid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Specnum">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Subject">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Setype">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Smcreatorid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_prodspeclog.Attribute.Createdtime">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field">
            <summary>
            <para>用户组和字段关联</para>
            <para>与Ec_profile2field数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.fieldid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.profileid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.visible_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.readonly_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field._Fieldid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field._Profileid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field._Tabid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field._Visible">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field._Readonly">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Fieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Profileid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Visible">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Readonly">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Attribute.Fieldid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Attribute.Profileid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Attribute.Visible">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2field.Attribute.Readonly">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions">
            <summary>
            <para></para>
            <para>与Ec_profile2standardpermissions数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.operation_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.profileid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.permissions_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions._Operation">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions._Profileid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions._Permissions">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Operation">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Profileid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Permissions">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Attribute.Operation">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Attribute.Profileid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2standardpermissions.Attribute.Permissions">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab">
            <summary>
            <para></para>
            <para>与Ec_profile2tab数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.profileid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.permissions_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab._Profileid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab._Tabid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab._Permissions">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Profileid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Permissions">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Attribute.Profileid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2tab.Attribute.Permissions">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility">
            <summary>
            <para></para>
            <para>与Ec_profile2utility数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.activityid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.profileid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.permission_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility._Activityid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility._Profileid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility._Permission">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Activityid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Profileid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Permission">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Attribute.Activityid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Attribute.Profileid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_profile2utility.Attribute.Permission">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists">
            <summary>
            <para>相关信息</para>
            <para>与Ec_relatedlists数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.relation_id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.related_tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.name_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.sequence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.label_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.presence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.tabtablename_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.columnname_pk_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.columnname_fk_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.related_tabtablename_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Relation_id">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Tabid">
            <summary> 模块id Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Related_tabid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Name">
            <summary> 名称 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Sequence">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Label">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Presence">
            <summary> 是否显示0显示 Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._TabTableName">
            <summary> 主表名 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._ColumnName_PK">
            <summary> 主字段名 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._ColumnName_FK">
            <summary> 外联字段名 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists._Related_tabTableName">
            <summary> 外联表名 Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Relation_id">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Tabid">
            <summary> 模块id，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Related_tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Name">
            <summary> 名称，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Sequence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Label">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Presence">
            <summary> 是否显示0显示，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.TabTableName">
            <summary> 主表名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.ColumnName_PK">
            <summary> 主字段名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.ColumnName_FK">
            <summary> 外联字段名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Related_tabTableName">
            <summary> 外联表名，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Relation_id">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Tabid">
            <summary>模块id</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Related_tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Name">
            <summary>名称</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Sequence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Label">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Presence">
            <summary>是否显示0显示</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.TabTableName">
            <summary>主表名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.ColumnName_PK">
            <summary>主字段名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.ColumnName_FK">
            <summary>外联字段名</summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_relatedlists.Attribute.Related_tabTableName">
            <summary>外联表名</summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country">
            <summary>
            <para></para>
            <para>与Ec_ship_country数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.actualfieldid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.actualfieldname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.sortorderid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.presence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.thelevel_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.parentfieldid_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country._Actualfieldid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country._Actualfieldname">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country._Sortorderid">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country._Presence">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country._Thelevel">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country._Parentfieldid">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Actualfieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Actualfieldname">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Sortorderid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Presence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Thelevel">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Parentfieldid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute.Actualfieldid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute.Actualfieldname">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute.Sortorderid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute.Presence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute.Thelevel">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_ship_country.Attribute.Parentfieldid">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab">
            <summary>
            <para></para>
            <para>与Ec_tab数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.tabid_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.name_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.presence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.tabsequence_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.tablabel_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.modifiedby_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.modifiedtime_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.customized_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.reportable_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Tabid">
            <summary>  Attribute_IsPrimary </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Name">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Presence">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Tabsequence">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Tablabel">
            <summary>  Attribute </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Modifiedby">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Modifiedtime">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Customized">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab._Reportable">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Tabid">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Name">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Presence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Tabsequence">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Tablabel">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Modifiedby">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Modifiedtime">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Customized">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Reportable">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Tabid">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Name">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Presence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Tabsequence">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Tablabel">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Modifiedby">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Modifiedtime">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Customized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Ec_tab.Attribute.Reportable">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Frame_View">
            <summary>
            <para></para>
            <para>与Frame_View数据表对应的实体对象。</para>
            <para>增加一个数据列的方法是：在"类字段"节增加一个bool标识位，与"Attribute"属性 </para>
            </summary>    
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Factory">
            <summary>工厂方法  </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.id_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.viewname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.viewzhname_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.inner_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.outer_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.outerkey_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.findfield_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.idfield_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.namefield_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.isbaobiao_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.isfieldhistory_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.isdev_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.area_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.helperurl_initialized">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.description_full_initialized">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.TableName">
            <summary>
            实体名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.LoadAllAttributes(System.Boolean)">
            <summary>
            设置自动载入所有列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.af_GetOptionValueSchema">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Clone">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.#cctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.#ctor">
            <summary>构造函数  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.#ctor(System.Boolean)">
            <summary>
            是否载入所有属性  
            </summary>
            <param name="IsLoadAllAttributes">是否全部初始化为true</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>请注意，这里当表中仅存在一个字段的时候，将可能与构造函数 new Table(string tableName)冲突  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.FromIView(AgileFrame.Orm.PersistenceLayer.BLL.Base.IView)">
            <summary>从视图（多表）内获取本表  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.GetOneInstance">
            <summary>获得一个实例  </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Retrieve">
            <summary>获取单一实例==BLLTable.GetRowData(); </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.GetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获得字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.SetValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Object)">
            <summary>通过属性 设置字段值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.GetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>通过属性 获取该字段是否已被初始化</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.SetInitialized(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Boolean)">
            <summary>通过属性 设置属性的初始化布尔值</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.af_GetAvailableAttributeItem(System.Collections.Generic.List{System.Object}@)">
            <summary>
            获取所有被初始化过的值，获取AttributeItem
            目的为获取 System.Windows.Forms.DataGridViewTextBoxColumn[] 在中间数据层采用了 自定义的 MyDataGridViewTextBoxColumn (空类继承自 DataGridViewTextBoxColumn)
            这里采用了两次遍历的方法，是为了避免拆装过程，使用源代码模式的时候，不会依赖于windows.form.dll。
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._ID">
            <summary>  Attribute_IDENTITY </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._ViewName">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._ViewZhName">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._Inner">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._Outer">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._OuterKey">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._FindField">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._IDField">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._NameField">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._IsBaoBiao">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._IsFieldHistory">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._IsDev">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._Area">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._HelperUrl">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View._Description_full">
            <summary>  Attribute_IsNotNull </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.ID">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.ViewName">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.ViewZhName">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Inner">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Outer">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.OuterKey">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.FindField">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.IDField">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.NameField">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.IsBaoBiao">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.IsFieldHistory">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.IsDev">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Area">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.HelperUrl">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Description_full">
            <summary> ，推荐使用 "_"符号开头 </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute">
            <summary>
            {字段属性-结构属性}
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.ID">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.ViewName">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.ViewZhName">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.Inner">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.Outer">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.OuterKey">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.FindField">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.IDField">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.NameField">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.IsBaoBiao">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.IsFieldHistory">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.IsDev">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.Area">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.HelperUrl">
            <summary></summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.Frame_View.Attribute.Description_full">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DAL.Base.RelationHelper">
            <summary>
            关联处理类，挖掘默认关系
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RelationHelper.InitSystemRelation``1(``0,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            检查关联关系有效性
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.RelationHelper.InitSystemRelation``1(``0,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            检查关联关系有效性
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MemCacheObj">
            <summary>
            List_MyTable_
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MemCacheSerivce">
            <summary>
            内存缓存服务，目前仅针对数据库访问，默认IsEnabled=false，最大缓存结果集NotAllowCacheRecordSum=100，最大容量MaxCacheCount=10000
            学习Redis的方案，支持不同的数据类型转换
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MemCacheSerivce.IsEnabled">
            <summary>
            是否启用SQL缓存依赖
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MemCacheSerivce.NotAllowCacheRecordSum">
            <summary>
            记录集的条数小于这个值的时候，适用于缓存 MemcachedClient.IsEnabled = True 时
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MemCacheSerivce.DicCacheKey">
            <summary>
            表名, cacheKey(cacheKey含有数据库名，tableA_1_tableB_2_sql语句 )
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MemCacheSerivce.MaxCacheCount">
            <summary>
            最大缓存结果集10000
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.DataInsertPool`1.Close">
            <summary>
            退出存储线程，关闭数据存储服务 //zlg blj
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DAL.Base.DataSavePool">
            <summary>
            大批量数据存储类
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Base.DataSavePool.Close">
            <summary>
            退出存储线程，关闭数据存储服务 //zlg blj
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTableQuick`1.Close">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type">
            <summary>
            窗体类型
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Manage">
            <summary>
            管理、列表显示窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Search">
            <summary>
            查询、搜索窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.NotSearch">
            <summary>
            非查询窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Add">
            <summary>
            增加窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Update">
            <summary>
            更新窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.AdvanceSearch">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Import">
            <summary>
            导入窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Export">
            <summary>
            导出窗体
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.AdvanceSearch_Like">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.Form_Type.Relation">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper">
            <summary>
            实现 List 与 DataTable 等其他数据封装类型 之间的互操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToBulkInsertStr``1(System.Collections.Generic.List{``0})">
            <summary>
            生成BulkInsert数据。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.Clone(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITable})">
            <summary>
            复制 List:IDataBuildTable
            </summary>
        </member>
        <!-- 对于成员“M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToDataTable(System.Collections.Generic.List{System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITable}})”忽略有格式错误的 XML 注释 -->
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToDataTable``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.FromDataTable``1(System.Data.DataTable,System.Collections.Generic.List{``0}@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.FromDataTable(System.Data.DataTable,System.Collections.Generic.List{System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITable}}@)">
            <summary>
            要求：listlist内部必须具备一条已经格式化的记录
            </summary>
        </member>
        <!-- 对于成员“M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToDataTable5``1(System.Collections.Generic.List{``0})”忽略有格式错误的 XML 注释 -->
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToDataTable(System.Collections.IList)">
            <summary>
            将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToDataTable2``1(System.Collections.Generic.List{``0})">
            
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.ListHelper.ToDataTable2``1(System.Collections.Generic.List{``0},System.String[])">
            
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable">
            <summary>
            ORM 操作核心业务类，Action在此处实现。//System.Windows.Forms.DataGridView dgv
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate">
            <summary>
            数据库的摘要说明
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.ExecSQL(System.String,System.String,System.Data.CommandType,AgileFrame.Orm.PersistenceLayer.Model.DataParameter[])">
            <summary>
            执行存储过程，采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.qDataRow(System.String,System.String,System.Data.CommandType)">
            <summary>
            查询数据返回一个行
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.qDataSet(System.String,System.String,System.Data.CommandType)">
            <summary>
            查询数据返回多个表格
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.qDataTable(System.String,System.String,System.Data.CommandType)">
            <summary>
            查询数据返回一个表格
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.qDataTable(System.String,System.String,System.Data.CommandType,AgileFrame.Orm.PersistenceLayer.Model.DataParameter[])">
            <summary>
            查询数据返回一个表格
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetOneValue(System.String,System.String,System.Data.CommandType)">
            <summary>
            查询数据返回单个值
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.SelectByPage(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            分页查询SelectByPage("HR_STAFF,HR_DEPT", "select a.[STAFF_NAME],b.DEPT_NAME from HR_STAFF a left join HR_DEPT b where a.DEPT_ID=b.DEPT_ID", "a.DEPT_ID", pageSize2, curPage2, ref recount2)
            请注意逗号为分隔符，排序字段请使用 表别名.列名 >>优先于>> 表名.列名 ，以防止引用不明确
            </summary>
            <param name="tableNamesSelected"></param>
            <param name="fullSql"></param>
            <param name="orderByFieldName"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.Factory(System.String)">
            <summary>
            输入参数 connectStr 可以是 web.config/app.config 的节点，可以直接是连接字符串；两者的区别以 是否包含 "="符号 来判断
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.Factory(System.String,System.Int32)">
            <summary>
            输入参数 连接字符串 与 sql执行超时时间, sql执行超时时间默认为30
            </summary>
            <param name="ConnectKey"></param>
            <param name="CommandTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.Select(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            查询数据库 
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.SelectBySql(System.String)">
            <summary>
            查询数据库 
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.SelectForDataTable(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            查询数据库 
            </summary>
            <param name="value">value中赋值的列即为选中的列,可以通过赋值,或者设置_Initialized为true的方式，没有赋值时为*,既为所有</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.IsRelationAvailable(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Boolean)">
            <summary>
            关联键设置是否有效
            </summary>
            <param name="primaryTable"></param>
            <param name="foreignTable"></param>
            <param name="inputTable"></param>
            <param name="outputTable"></param>
            <param name="IsThrowError">是否抛出异常</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetOneValue(System.String,System.String)">
            <summary>
            获取单个数据
            </summary>
            <param name="fullSqlStr">查询语句，参数使用ID=@ID</param>
            <returns>返回字符型</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetOneValueByAttribute(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据属性获取单个数据，null的时候，返回 ""
            </summary>
            <param name="AttributeName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据ID获取单个数据
            </summary>
            <param name="value"></param>
            <param name="condition">查询的参数值</param>
            <returns>返回字符型</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetSelectStr(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            For GetOneRow()
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetSelectStr(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            For Select()
            </summary>
            <param name="AttributeName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetTableZhName(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetTableZhName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetColumnZhName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            得到指定属性的多语言字符串（默认为中文）
            </summary>
            <param name="mAttributeItem">目标属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetLanguageName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            得到指定属性的多语言字符串（默认为中文）
            </summary>
            <param name="mAttributeItem">目标属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetEnumText(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            获取特定字段属性中定义的 枚举多选项
            </summary>
            <param name="tbName">表名</param>
            <param name="AttributeNamelist">属性列表</param>
            <param name="valuelistlist">枚举量列表</param>
            <param name="valuelistlistZh">枚举量列表的多语言翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetCombDisplayText(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            获取特定字段属性中定义的 用户自定义显示源
            </summary>
            <param name="tbName">表名</param>
            <param name="AttributeNamelist">属性列表</param>
            <param name="valuelistlist">枚举量列表</param>
            <param name="valuelistlistZh">枚举量列表的多语言翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.GetOptionText_FK(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            获取特定字段属性的 关联主键的值
            </summary>
            <param name="tbName">表名</param>
            <param name="AttributeNamelist">属性列表</param>
            <param name="valuelistlist">关联主键表值</param>
            <param name="valuelistlistZh">关联主键表值的多语言翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.IsExistOptionValue(System.String,System.String)">
            <summary>
            是否存在多选项值
            </summary>
            <param name="tbName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.IsPK(System.String,System.String)">
            <summary>
            是否主键
            </summary>
            <param name="tbName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.IsExistIdentity(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            是否存在标识（数据库自增标识）
            </summary>
            <param name="attributeName">属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.IsExistZhName(System.String,System.String)">
            <summary>
            是否存在多语言定义（默认为中文）
            </summary>
            <param name="tbName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.TableOperate.SelectForTable(AgileFrame.Orm.PersistenceLayer.Model.MultiQuery)">
            <summary>
            多表关联查询，可包含子查询。获取DataTable.IDataBuildTable
            </summary>
            <param name="mq">查询对象</param>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.SaveOrUpdateQuickIsConsole">
            <summary>
            是否显示在控制台
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Factory">
            <summary>
            工厂方法，生产唯一操作对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Factory(System.String)">
            <summary>
            工厂方法，生产唯一操作对象
            </summary>
            <param name="connectStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.ExecSQL(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.String)">
            <summary>
            增加删除修改用的sql 参数(new ITableImplement("表名", sql语句)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.ExecSQL(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.String,System.Data.CommandType)">
            <summary>
            参数(new ITableImplement("表名", sql语句) 执行存储过程，采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.ExecSQL(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.String,System.Data.CommandType,AgileFrame.Orm.PersistenceLayer.Model.DataParameter[])">
            <summary>
            参数(new ITableImplement("表名", sql语句) 执行存储过程，采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.qDataRow(System.String,System.String)">
            <summary>
            查询数据返回一个行 参数(new ITableImplement("表名", sql语句)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.qDataRow(System.String,System.String,System.Data.CommandType)">
            <summary>
            执行存储过程，参数(new ITableImplement("表名", sql语句) 采用参数 System.Data.CommandType.StoredProcedure
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.qDataSet(System.String,System.String)">
            <summary>
            查询数据返回多个表格 参数(new ITableImplement("表名", sql语句)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.qDataTable(System.String,System.String)">
            <summary>
            查询数据返回一个表格 参数(new ITableImplement("表名", sql语句)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetOneValue(System.String,System.String)">
            <summary>
            查询数据返回单个值 参数(new ITableImplement("表名", sql语句)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.SelectByPage(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
             fullSql = "select * from table where id=1 order by name"，后面参数是分页参数
            </summary>
            <param name="tableNamesSelected">缓存表名</param>
            <param name="fullSql"></param>
            <param name="orderByFieldName"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.SetTimeStamp(System.String)">
            <summary>
            设置是否需要支持并发冲突
            </summary>
            <param name="TableName">表名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.SetTimeStamp(System.String,System.Boolean)">
            <summary>
            设置是否需要支持并发冲突
            </summary>
            <param name="TableName">表名</param>
            <param name="IsEnabledTimestamp">是否支持并发冲突</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据value获取单个数据
            </summary>
            <param name="value">取值对象</param>
            <param name="condition">条件对象</param>
            <returns>返回字符型</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            根据属性获取单个数据
            </summary>
            <param name="attrItem">目标属性</param>
            <param name="condition">条件对象</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.ToDataTable(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView})">
            <summary>
            DataTable 转换成List(IView) 以方便绑定
            </summary>
            <param name="listview"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.BindHead(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            绑定列标题，其宽度为默认
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="attribute">属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.BindHead(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32)">
            <summary>
            绑定列标题，并设置其宽度
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="attribute">属性</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Bind``1(System.Object,System.Collections.Generic.List{``0},``0)">
            <summary>
            value 为显示的视图模型。当传入的valueList为null的时候，该数值存在则可自动进行列显示。
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="valueList">目标数据集合</param>
            <param name="value">设定显示属性的实体对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Bind``1(System.Object,System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            绑定 System.Windows.Forms.DataGridView 单表记录集合，定制显示列
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="valueList">目标数据集合</param>
            <param name="IsEnumTranslate">是否进行表格内的枚举翻译</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Bind``1(System.Object,System.Collections.Generic.List{``0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            绑定 System.Windows.Forms.ComboBox 单表记录集合，定制显示列
            </summary>
            <param name="dgv"></param>
            <param name="cmb">待绑定的ComboBox列表控件</param>
            <param name="valueList">目标数据集合</param>
            <param name="DisplayMember">显示属性</param>
            <param name="ValueMember">值属性</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Bind(System.Object,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView},System.Boolean)">
            <summary>
            绑定数据显示列，如果已将数据模型的中文注释放至数据库中，则能自动支持 中文转译 与option多选项 自动匹配 等功能
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="viewList">目标数据集合</param>
            <param name="IsEnumTranslate">是否进行表格内的枚举翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.RemoveBind(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            通过AttributeName 移除绑定列
            </summary>
            <param name="dgv">已绑定表格控件</param>
            <param name="AttributeName">属性</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Hide(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            通过AttributeName 隐藏绑定列
            </summary>
            <param name="dgv">已绑定表格控件</param>
            <param name="AttributeName">属性</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetEnumText(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            获取特定字段属性中定义的 枚举多选项
            </summary>
            <param name="tbName">表名</param>
            <param name="AttributeNamelist">属性列表</param>
            <param name="valuelistlist">枚举量列表</param>
            <param name="valuelistlistZh">枚举量列表的多语言翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetCombDisplayText(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            获取特定字段属性中定义的 用户自定义显示源
            </summary>
            <param name="tbName">表名</param>
            <param name="AttributeNamelist">属性列表</param>
            <param name="valuelistlist">枚举量列表</param>
            <param name="valuelistlistZh">枚举量列表的多语言翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetOptionText_FK(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.String}}@)">
            <summary>
            获取特定字段属性的 关联主键的值
            </summary>
            <param name="tbName">表名</param>
            <param name="AttributeNamelist">属性列表</param>
            <param name="valuelistlist">关联主键表值</param>
            <param name="valuelistlistZh">关联主键表值的多语言翻译</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.IsExistOptionValue(System.String,System.String)">
            <summary>
            是否存在多选项值
            </summary>
            <param name="tbName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.IsPK(System.String,System.String)">
            <summary>
            是否主键
            </summary>
            <param name="tbName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.IsExistIdentity(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            是否存在标识（数据库自增标识）
            </summary>
            <param name="attributeName">属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.IsExistZhName(System.String,System.String)">
            <summary>
            是否存在多语言定义（默认为中文）
            </summary>
            <param name="tbName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetTableZhName(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetTableZhName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetColumnZhName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            得到指定属性的多语言字符串（默认为中文）
            </summary>
            <param name="mAttributeItem">目标属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.GetLanguageName(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            得到指定属性的多语言字符串（默认为中文）
            </summary>
            <param name="mAttributeItem">目标属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Select(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            查询
            </summary>
            <param name="AttributeItem1">属性</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.SelectBySql(System.String)">
            <summary>
            
            </summary>
            <param name="sqlStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Bind``1(System.Object,System.Collections.Generic.List{``0})">
            <summary>
            绑定数据显示列，如果已将数据模型的中文注释放至数据库中，则能自动支持 中文转译 与option多选项 自动匹配 等功能
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="valueList">目标数据集合</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Hide(System.Object,System.String)">
            <summary>
            隐藏列
            </summary>
            <param name="dgv">已绑定表格控件</param>
            <param name="AttributeName">属性</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.RemoveBind(System.Object,System.String)">
            <summary>
            通过AttributeName 移除绑定列
            </summary>
            <param name="dgv">已绑定表格控件</param>
            <param name="AttributeName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.BLLTable.Bind(System.Object,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView})">
            <summary>
            绑定数据显示列，如果已将数据模型的中文注释放至数据库中，则能自动支持 中文转译 与option多选项 自动匹配 等功能
            </summary>
            <param name="dgv">待绑定表格控件</param>
            <param name="viewList">目标数据集合</param>
        </member>
        <member name="T:AgileFrame.Core.EventAndDelegate.AddIn_IExcelUtility">
            <summary>
            Excel通用类插件接口
            </summary>
        </member>
        <member name="P:AgileFrame.Core.EventAndDelegate.AddIn_IExcelUtility.ExcelUtilityFactory">
            <summary>
            在调试期被载入的 持久层执行数据库操作触发的事情，显示了持久层对应的完整Sql语句
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ExcelService.IExcelUtility">
            <summary>
            Excel通用类插件接口
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL">
            <summary>
            SQL脚本生成
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL._ConnectionStr">
            <summary>
            实际上这边参数指定数据库的都不需要，因为你到时执行SQL时就要指定数据库才能操作
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL.GetCreateTableSQL(System.String,System.String@,System.String@)">
            <summary>
            获取资料表的SQL脚本
            </summary>
            <param name="ATableName">资料表名</param>
            <param name="ATableSQL">表的SQL脚本</param>
            <param name="ACONSTRAINT">表的约束脚本</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL.WriteToFile(System.String)">
            <summary>
            把字符串写入文件中，是追加写入
            </summary>
            <param name="AWriteStr">字符串</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL.GetDataBySql(System.String)">
            <summary>
            通过SQL语句抓取资料
            </summary>
            <param name="ASql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL.GetViewSQL(System.String,System.String@)">
            <summary>
            获取该数据库中视图的SQL语法
            </summary>
            <param name="AName"></param>
            <param name="AViewSQL"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.TransSQL.GetProcedureSQL(System.String,System.String@)">
            <summary>
            获取存储过程的SQL脚本
            </summary>
            <param name="AName">存储过程名</param>
            <param name="AProcSQL">脚本</param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery">
            <summary>
            复杂查询对象，用于多表结果集操作。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Factory(System.String)">
            <summary>
            输入数据源连接关键字 connectStr 可以是 web.config/app.config 的节点，可以直接是连接字符串；两者的区别以 是否包含 "="符号 来判断
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddPageSql(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fullSql"></param>
            <param name="orderByFieldName">"a.DEPT_ID"</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.UpdateSQLStr(System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.DataParameter[]}@,System.String,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.af_InitUpdate(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement},System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem}@,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem}@)">
            <summary>
            更新的时候，通过判断属性是否存在修改，重新初始化新旧状态对象之间的关系，本方法改变了两个对象。
            </summary>
            <param name="newValue"></param>
            <param name="oldValueList"></param>
            <param name="attr_old_Remove"></param>
            <param name="attr_new_Remove"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SelectSQLStr(System.Collections.Generic.List{System.String}@)">
            <summary>
            返回msg，检测是否方法使用错误。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SelectSQLStr(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.DataParameter}@)">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.m_PageKey">
            <summary>
            分页相关
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.InitPageKey(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.DataBaseType)">
            <summary>
            设置 pagekey
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.InitPageKey(AgileFrame.Orm.PersistenceLayer.DataBaseType)">
            <summary>
            设置 pagekey
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.RelationConditions">
            <summary>
            条件相关
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.m_num">
            <summary>
            不同的表的重复次数
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.subQuerySQL">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.subQuery_initialized">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.relationSQL">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddMultiQuery(AgileFrame.Orm.PersistenceLayer.Model.MultiQuery)">
            <summary>
            增加高级查询对象(复合查询)
            </summary>
            <param name="mq"></param>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.subConditions">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Values">
            <summary>
            获取或者设置 要取值的查询对象集 List~IDataBuildTable
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Conditions">
            <summary>
            获取或者设置 所有的条件对象集，注意所有的子查询条件必须放在 另外的方法中，AddSubRelation(subQuery subQuery, IDataBuildTable condition)。
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddValue(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.AttributeItem})">
            <summary>
            增加属性，必须是同一个表的。
            </summary>
            <param name="attrs"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary>
            增加取值属性
            </summary>
            <param name="myTable"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddValue(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            增加取值对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddValue(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            增加取值对象数组
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Add(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            增加取值对象数组
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Add``1(``0)">
            <summary>
            增加取值对象
            </summary>
            <param name="myTable">取值对象</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Add``1(System.Collections.Generic.List{``0})">
            <summary>
            增加取值对象数组
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddCondition(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            增加条件对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddCondition(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.ITableImplement})">
            <summary>
            增加条件对象数组
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddRelation(AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            增加关联对象，如果关系内包含条件，则 1、检查是否超越表的合理范围  2、AddRelation之后，Relation.Conditions条件将被Clear()。可防止被意外重新引用。
            比如 select * from role innerjoin roleUser And roleUser.userid = 1
            </summary>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Add(AgileFrame.Orm.PersistenceLayer.Model.Relation)">
            <summary>
            增加关系对象
            </summary>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Add(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            增加关系对象数组
            </summary>
            <param name="relationList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Add(AgileFrame.Orm.PersistenceLayer.Model.Relations)">
            <summary>
            增加关系对象数组
            </summary>
            <param name="relationList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddRelations(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.Relation})">
            <summary>
            增加 关联关系数组
            </summary>
            <param name="relationList"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddSubRelation(AgileFrame.Orm.PersistenceLayer.Model.SubQuery)">
            <summary>
            增加一个嵌套的子查询，比如 select * from role where roleid in (select top 1 roleid from user where user.name='立广' )
            </summary>
            <param name="subQuery"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.AddSubRelations(System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.Model.SubQuery})">
            <summary>
            增加一个嵌套的子查询，比如 select * from role where roleid in (select top 1 roleid from user where user.name='立广' )
            </summary>
            <param name="subRelations"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SetSubQuerySQL(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SetSubQuerySQL(System.String,System.String,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.DataParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.InitRelation">
            <summary>
            挖掘默认关联
            ，并进行关联运算，对关联关系进行排序
            此方法有待优化
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.GetRelationSQL">
            <summary>
            获得关联脚本，优化方法:myTbs不需要排序，而直接使用m_num获得最大值
            </summary>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.it">
            <summary>
            关系对中的表重复最多的次数
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SetRelation(System.String,System.String,System.String,System.Int32)">
            <summary>重要的内容
            </summary>
            <param name="myField"></param>
            <param name="otherField"></param>
            <param name="activity"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Sort(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.String})">
            <summary>
            关联运算之排序
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Sort(System.Collections.Generic.List{System.Int32})">
            <summary>
            关联运算之排序
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.OrderBy(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.Order)">
            <summary>
            设置排序方式，使用方法：OrderBy(DOC_SUBDEPT.Attribute.CompanyName)
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Top(System.Int32)">
            <summary>
            取值对象操作
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SQL">
            <summary>
            持久层对应的数据库SQL脚本，可随时查询与监控。延迟加载。
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.SQLParameters">
            <summary>
            持久层对应的数据库SQL脚本，可随时查询与监控。延迟加载。
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery.Tbs">
            <summary>
            所有相关的多表。
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery._OrderByItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Model.MultiQuery._OrderByText">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Core.LanguageServiceManger">
            <summary>
            多语言管理器，与数据字典多语言相关
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageServiceManger.m_DefaultLanguageKey2">
            <summary>
            语言可转换的次数只有一次
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageServiceManger.DefaultLanguageKeyIsChanged">
            <summary>
            语言被改变时
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Core.LanguageServiceManger.DefaultLanguageKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType">
             <summary>
            考虑到很多SQL都是分页语句，关联查询，条件查询，集合操作，都是不能被缓存的SQL，而真正能够被缓存的SQL只有根据主键查询对象和对象关联对象的查询。
            不意味着性能可以提升一倍！这是因为能够被缓存的都是按照主键查询单条记录的SQL，这些SQL本身即使发送到数据库，对数据库造成的压力也没有想像的那么大。真正对数据库造成庞大压力的正是那些没有索引的大表查询，和造成了全表扫描的关联查询，这些一旦涉及到全表扫描的查询，才是性能的真正杀手。
            
            缓存分为 内存镜像、延迟
            
             缓存分三种，从上至下，增加复杂性。
             一种是业务操作数据库脚本缓存，中间层根据 面向对象的数据源操作模型，简化解析过程
             一种是某类型（某表）集合的完全镜像缓存（全局），适用于小于200记录的数据库表。可以选择缓存的数据源表中的部分字段或者全部字段
             一种是累积式缓存//依据数据源依赖的更新频度，缓存查询结果集相关的一张表，任一个数据块（一个特定的数据库操作）
             </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.Condition">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.Value">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.UpdateValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.InsertValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.RelationList">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.RelationListList">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.ITableType.PageCountBool">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MemCacheObj`1">
            <summary>
            List-MyTable
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MemCacheSerivce`1">
            <summary>
            内存缓存服务，目前仅针对数据库访问，默认IsEnabled=false，最大缓存结果集MemCacheSerivce.NotAllowCacheRecordSum=100，最大容量MemCacheSerivce.MaxCacheCount=10000
            学习Redis的方案，支持不同的数据类型转换
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MemCacheSerivce`1.DicCacheKey">
            <summary>
            表名, cacheKey(cacheKey含有数据库名，tableA_1_tableB_2_sql语句 )
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MemCacheSerivce`1.LastCacheClearTimer">
            <summary>
            最大缓存结果集10000
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.ProjectName">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.LanguageType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.SqlType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.NameSpace">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.TableTemplate">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.Database">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Config.Username">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Common.HighResolutionTimer">
            <summary>
            高精度与性能计时器。important to measure code execution time.
            System.Environment.TickCount is not suitable for high resolution timing. Its resolution cannot be less than 500 milliseconds. 
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Common.MultiThread.DoThread(System.Threading.ThreadStart,System.Boolean@,System.Int32)">
            <summary>
            异步执行，且设置过期时间为timeOutLength毫秒；适用于快速返回通讯状态检测，如 数据库连接
            </summary>
            <param name="threadStart"></param>
            <param name="IsBuilding"></param>
            <param name="timeOutLength"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Xml.XmlOper`1.Serialize(System.String,`0)">
            <summary>
            将对象序列化
              
            </summary>
            <param name="path">需要保存的路径</param>
            <param name="objCrazyCoder">T对象</param>
            <returns>是否序列化成功</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Xml.XmlOper`1.DeSerialize(System.String)">
            <summary>
            将对象反序列化 
              
            </summary>
            <param name="path">源对象的路径</param>
            <returns>返回新的T对象</returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Xml.XmlOper`1.ToXml(`0)">
            <summary>
            返回存储在实体类中的Xml表现形式
              
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Xml.XmlOper`1.FromXml(System.String)">
            <summary>
            从Xml字符串中反序列化获得实体类
             
            </summary>
            <param name="xml">Xml</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.Xml.XmlOper`1.FromXml(System.String,System.Text.Encoding)">
            <summary>
            从Xml字符串中反序列化获得实体类
             
            </summary>
            <param name="xml">Xml</param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.EventAndDelegate.AddIn_BindDataGridView">
            <summary>
            绑定插件接口
            </summary>
        </member>
        <member name="P:AgileFrame.Core.EventAndDelegate.AddIn_BindDataGridView.BindDataGridViewFactory">
            <summary>
            在调试期被载入的 持久层执行数据库操作触发的事情，显示了持久层对应的完整Sql语句
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.BindHead2(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,System.Int32,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.Bind2``1(System.Object,System.Collections.Generic.List{``0},``0,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.Bind2``1(System.Object,System.Collections.Generic.List{``0},AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.Bind2``1(System.Object,System.Collections.Generic.List{``0},System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.Bind2(System.Object,System.Collections.Generic.List{AgileFrame.Orm.PersistenceLayer.BLL.Base.IView},System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.RemoveBind2(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.BLL.Base.IBindDataGridView.Hide2(System.Object,AgileFrame.Orm.PersistenceLayer.Model.AttributeItem)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.UserTransaction.commit">
            
            方法
            
        </member>
        <member name="T:FrameForAgile.Common.Tmp_NameSpace">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:agileFrame.pool.IObjectPool">
            <summary>
            创建一个接口，用于限定对象池中所保存的对象的基本行为。
            Create方法中，用户可以用来创建实际的对象，如建立数据库连接，并打开这个连接；GetInnerObject方法，使用户可以返回这个实际的对象，如一个SqlConnection对象；IsValidate方法是用来判断用户自定义对象的有效性的，是对象池决定是否重新创建对象的标志；Release方法中，用户可以进行资源释放工作。
            </summary>
        </member>
        <member name="T:agileFrame.pool.PoolItem">
            <summary>
            这个类，一个关键的属性是Using，该属性表示对象是否正在被被用户使用。注意，PoolItem创建时，接受一个Object类型的Param参数，这个参数最后被传递给用户自定义对象的Create方法。用户可以利用这一点，在创建ObjectPool时指定一些参数，供其自定义对象在创建时使用。比如创建SocketPool时，将服务器IP，端口通过Param传递给自定义对象的Create方法，用户就可以在Create方法中连接指定的服务器了。
            </summary>
        </member>
        <member name="P:agileFrame.pool.PoolItem.Using">
            <summary>
            该属性表示对象是否正在被被用户使用
            </summary>
        </member>
        <member name="T:agileFrame.pool.ObjectPool">
            <summary>
            用户自定义对象在我们的ObjectPool中，可以用列表存储，如ArrayList或者Hashtable，为了表示每个用户对象的状态，我们还需要将用户自定义对象包装一下，然后在放到列表中保存。下面定义了一个ObjectPool类的子类，用于包装用户自定义对象
            </summary>
        </member>
        <member name="T:agileFrame.pool.t.ObjectPool`1">
            <summary>
            不可用的代码
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlMirrorCache">
             <summary>
             考虑到很多SQL都是分页语句，关联查询，条件查询，集合操作，都是不能被缓存的SQL，而真正能够被缓存的SQL只有根据主键查询对象和对象关联对象的查询。
            不意味着性能可以提升一倍！这是因为能够被缓存的都是按照主键查询单条记录的SQL，这些SQL本身即使发送到数据库，对数据库造成的压力也没有想像的那么大。真正对数据库造成庞大压力的正是那些没有索引的大表查询，和造成了全表扫描的关联查询，这些一旦涉及到全表扫描的查询，才是性能的真正杀手。
            
            缓存分为 内存镜像、延迟
             缓存分三种，一种是类型集合的完全镜像缓存（全局），一种是累积式缓存//缓存任一张表，任一个数据块（一个特定的数据库操作）
             内部规则为 超过200条记录，则不再存入缓存。
             </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlMirrorCache.#cctor">
            <summary>
            orm dal层 数据操作对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlMirrorCache.NewSQLCache(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Int32)">
            <summary>
            修改的表，影响的条数
            </summary>
            <param name="condition"></param>
            <param name="count"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlMirrorCache.NewSQLCache(System.String,System.Boolean)">
            <summary>
            为独立的sqlstr设写的缓存更新方法
            </summary>
            <param name="sqlstr"></param>
            <param name="isParseSQL"></param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlMirrorCache`1">
             <summary>
            考虑到很多SQL都是分页语句，关联查询，条件查询，集合操作，都是不能被缓存的SQL，而真正能够被缓存的SQL只有根据主键查询对象和对象关联对象的查询。
            不意味着性能可以提升一倍！这是因为能够被缓存的都是按照主键查询单条记录的SQL，这些SQL本身即使发送到数据库，对数据库造成的压力也没有想像的那么大。真正对数据库造成庞大压力的正是那些没有索引的大表查询，和造成了全表扫描的关联查询，这些一旦涉及到全表扫描的查询，才是性能的真正杀手。
            
            缓存分为 内存镜像、延迟
             缓存分两种，一种是类型集合的完全镜像缓存，一种是累积式缓存
             </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SQLOperatorCache">
            <summary>
            所有SQL操作都可能用到的cache策略
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache">
            <summary>
            查询结果 cache，本质上是与业务相关的，所以，需要根据页面进行训练优化，并根据更新频率来确定优先级，训练的结果是：{业务id，业务缓存优先级} 业务缓存优先级=业务需求/更新频率
            业务id = 参数不同，语句相同的sql语句；
            不同的参数次数为一次小更新，记录被修改为一次大更新
            参数相同
            
            是一种动态cache，智能判断是否进行cache；cache集合的容量限定为50个业务操作。每个业务操作可以拥有10个参数区；总共500个缓存区。
            
            筛选条件为 结果集合记录不超过20条的查询，每充满队列时，
            判断依据是
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.#cctor">
            1、第一次读取，写入cache。
            2、在一个缓存时间单元内，缓存重复使用次数=0;修改次数超过100的，不进行缓存。
            <summary>
            orm dal层 数据操作对象
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.GetCacheForObject(System.String,System.String)">
            <summary>
            获取cache的时候，检查更新 200 个缓存中的一半是否清除
            </summary>
            <param name="sqlStr"></param>
            <param name="cachekey"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.SetCache(System.String,System.String,System.String,System.Object,System.Int32)">
            <summary>
            表名、业务逻辑、业务实现、查询结果、记录数目
            </summary>
            <param name="tbName"></param>
            <param name="sqlStr"></param>
            <param name="SqlParameters"></param>
            <param name="temp"></param>
            <param name="count"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            缓存获取
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.GetOneValue(AgileFrame.Orm.PersistenceLayer.Model.AttributeItem,AgileFrame.Orm.PersistenceLayer.Model.ITableImplement)">
            <summary>
            缓存获取
            </summary>
            <param name="AttributeName"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.NewSQLCache(AgileFrame.Orm.PersistenceLayer.Model.ITableImplement,System.Int32)">
            <summary>
            修改的表，影响的条数
            </summary>
            <param name="condition"></param>
            <param name="count"></param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SqlQueryCache.NewSQLCache(System.String,System.Boolean)">
            <summary>
            为独立的sqlstr设写的缓存更新方法
            </summary>
            <param name="sqlstr"></param>
            <param name="isParseSQL"></param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DBUtility.Cache.SQLRelationCache">
            <summary>
            敏捷框架 在需要关联数据的时候所采用的取关联数据的策略
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.Debug">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.MemoryCacheString">
            <summary>
            少数记录的类型表的镜像缓存
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.IsDebug">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.SqlType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.Database">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Orm.PersistenceLayer.ConfigForTemplate.ConnectStr">
            <summary>
            自动判断数据库类型
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.DBsupport.#ctor">
            <summary>
            默认支持mssql
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DBUtility.DBsupport.#ctor(AgileFrame.Orm.PersistenceLayer.DataBaseType)">
            <summary></summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DALException.DalException">
            <summary>
            Summary description for DalException.
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalException.#ctor">
            <summary>Initializes a new instance of the DalException class.</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DalException class with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DalException class with a specified error message And a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The inner exception reference.</param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DALException.DalUniqueConstraintException">
            <summary>
            Summary description for DalUniqueConstraintException.
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalUniqueConstraintException.#ctor">
            <summary>Initializes a new instance of the DalUniqueConstraintException class.</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalUniqueConstraintException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DalUniqueConstraintException class with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalUniqueConstraintException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DalUniqueConstraintException class with a specified error message And a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The inner exception reference.</param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DALException.DalLoginException">
            <summary>
            Summary description for DalLoginException.
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalLoginException.#ctor">
            <summary>Initializes a new instance of the DalLoginException class.</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalLoginException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DalLoginException class with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalLoginException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DalLoginException class with a specified error message And a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The inner exception reference.</param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DALException.DalForeignKeyException">
            <summary>
            Summary description for DalForeignKeyException.
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalForeignKeyException.#ctor">
            <summary>Initializes a new instance of the DalForeignKeyException class.</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalForeignKeyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DalForeignKeyException class with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalForeignKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DalForeignKeyException class with a specified error message And a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The inner exception reference.</param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.DALException.DalDeadLockException">
            <summary>
            Summary description for DalForeignKeyException.
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalDeadLockException.#ctor">
            <summary>Initializes a new instance of the DalDeadLockException class.</summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalDeadLockException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DalDeadLockException class with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DALException.DalDeadLockException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DalDeadLockException class with a specified error message And a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The inner exception reference.</param>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.BLL.Base.WatchConfig">
            <summary>
            监控 数据 的 修改、删除，历史记录
            </summary>
        </member>
    </members>
</doc>
